#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("m_axi_dram_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_dram_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_dram_AWADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_dram_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_dram_AWLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_dram_AWSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_dram_AWBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_dram_AWLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_dram_AWCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_dram_AWPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_dram_AWQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_dram_AWREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_dram_AWUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_dram_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_dram_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_dram_WDATA", 512, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_dram_WSTRB", 64, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_dram_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_dram_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_dram_WUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_dram_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_dram_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_dram_ARADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_dram_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_dram_ARLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_dram_ARSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_dram_ARBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_dram_ARLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_dram_ARCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_dram_ARPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_dram_ARQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_dram_ARREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_dram_ARUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_dram_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_dram_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_dram_RDATA", 512, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_dram_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_dram_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_dram_RUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_dram_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_dram_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_dram_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_dram_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_dram_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_dram_BUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("i_addr_V", 32, hls_in, 1, "ap_none", "in_data", 1),
	Port_Property("i_wdata_V", 512, hls_in, 2, "ap_none", "in_data", 1),
	Port_Property("i_op", 1, hls_in, 3, "ap_none", "in_data", 1),
	Port_Property("dram_V", 32, hls_in, 4, "ap_none", "in_data", 1),
	Port_Property("ap_return", 512, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "PLRUCache";
