// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _WriteHit_HH_
#define _WriteHit_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct WriteHit : public sc_module {
    // Port declarations 54
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > i_addr_V;
    sc_in< sc_lv<512> > i_wdata_V;
    sc_in< sc_lv<8> > valid_V;
    sc_in< sc_lv<24> > tag_0_V_read;
    sc_in< sc_lv<24> > tag_1_V_read;
    sc_in< sc_lv<24> > tag_2_V_read;
    sc_in< sc_lv<24> > tag_3_V_read;
    sc_in< sc_lv<24> > tag_4_V_read;
    sc_in< sc_lv<24> > tag_5_V_read;
    sc_in< sc_lv<24> > tag_6_V_read;
    sc_in< sc_lv<24> > tag_7_V_read;
    sc_out< sc_lv<8> > dataArray_0_V_address0;
    sc_out< sc_logic > dataArray_0_V_ce0;
    sc_out< sc_logic > dataArray_0_V_we0;
    sc_out< sc_lv<512> > dataArray_0_V_d0;
    sc_out< sc_lv<8> > dataArray_1_V_address0;
    sc_out< sc_logic > dataArray_1_V_ce0;
    sc_out< sc_logic > dataArray_1_V_we0;
    sc_out< sc_lv<512> > dataArray_1_V_d0;
    sc_out< sc_lv<8> > dataArray_2_V_address0;
    sc_out< sc_logic > dataArray_2_V_ce0;
    sc_out< sc_logic > dataArray_2_V_we0;
    sc_out< sc_lv<512> > dataArray_2_V_d0;
    sc_out< sc_lv<8> > dataArray_3_V_address0;
    sc_out< sc_logic > dataArray_3_V_ce0;
    sc_out< sc_logic > dataArray_3_V_we0;
    sc_out< sc_lv<512> > dataArray_3_V_d0;
    sc_out< sc_lv<8> > dataArray_4_V_address0;
    sc_out< sc_logic > dataArray_4_V_ce0;
    sc_out< sc_logic > dataArray_4_V_we0;
    sc_out< sc_lv<512> > dataArray_4_V_d0;
    sc_out< sc_lv<8> > dataArray_5_V_address0;
    sc_out< sc_logic > dataArray_5_V_ce0;
    sc_out< sc_logic > dataArray_5_V_we0;
    sc_out< sc_lv<512> > dataArray_5_V_d0;
    sc_out< sc_lv<8> > dataArray_6_V_address0;
    sc_out< sc_logic > dataArray_6_V_ce0;
    sc_out< sc_logic > dataArray_6_V_we0;
    sc_out< sc_lv<512> > dataArray_6_V_d0;
    sc_out< sc_lv<8> > dataArray_7_V_address0;
    sc_out< sc_logic > dataArray_7_V_ce0;
    sc_out< sc_logic > dataArray_7_V_we0;
    sc_out< sc_lv<512> > dataArray_7_V_d0;
    sc_out< sc_lv<8> > mruArray_V_2_address0;
    sc_out< sc_logic > mruArray_V_2_ce0;
    sc_out< sc_logic > mruArray_V_2_we0;
    sc_out< sc_lv<8> > mruArray_V_2_d0;
    sc_in< sc_lv<8> > mruArray_V_2_q0;


    // Module declarations
    WriteHit(sc_module_name name);
    SC_HAS_PROCESS(WriteHit);

    ~WriteHit();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > indexReg_V_fu_323_p4;
    sc_signal< sc_lv<8> > indexReg_V_reg_774;
    sc_signal< sc_lv<64> > tmp_fu_343_p1;
    sc_signal< sc_lv<64> > tmp_reg_786;
    sc_signal< sc_lv<8> > mruArray_V_1_addr_reg_798;
    sc_signal< sc_lv<1> > or_cond3_fu_458_p2;
    sc_signal< sc_lv<1> > or_cond3_reg_803;
    sc_signal< sc_lv<4> > sel_tmp10_fu_622_p3;
    sc_signal< sc_lv<4> > sel_tmp10_reg_808;
    sc_signal< sc_lv<1> > sel_tmp33_demorgan_fu_630_p2;
    sc_signal< sc_lv<1> > sel_tmp33_demorgan_reg_813;
    sc_signal< sc_lv<1> > sel_tmp14_fu_654_p2;
    sc_signal< sc_lv<1> > sel_tmp14_reg_818;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_s_fu_707_p2;
    sc_signal< sc_lv<3> > tmp_32_fu_693_p1;
    sc_signal< sc_lv<24> > tagReg_V_fu_333_p4;
    sc_signal< sc_lv<1> > tmp_24_fu_348_p1;
    sc_signal< sc_lv<1> > tmp_1_fu_352_p2;
    sc_signal< sc_lv<1> > tmp_25_fu_364_p3;
    sc_signal< sc_lv<1> > tmp_10_1_fu_372_p2;
    sc_signal< sc_lv<1> > tmp_26_fu_384_p3;
    sc_signal< sc_lv<1> > tmp_10_2_fu_392_p2;
    sc_signal< sc_lv<1> > tmp_27_fu_404_p3;
    sc_signal< sc_lv<1> > tmp_10_3_fu_412_p2;
    sc_signal< sc_lv<1> > tmp_28_fu_424_p3;
    sc_signal< sc_lv<1> > tmp_10_4_fu_432_p2;
    sc_signal< sc_lv<1> > tmp_29_fu_444_p3;
    sc_signal< sc_lv<1> > tmp_10_5_fu_452_p2;
    sc_signal< sc_lv<1> > tmp_31_fu_478_p3;
    sc_signal< sc_lv<1> > tmp_10_7_fu_486_p2;
    sc_signal< sc_lv<1> > or_cond_fu_358_p2;
    sc_signal< sc_lv<1> > or_cond5_fu_492_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_506_p2;
    sc_signal< sc_lv<4> > p_cast_fu_498_p3;
    sc_signal< sc_lv<1> > or_cond8_fu_378_p2;
    sc_signal< sc_lv<1> > sel_tmp1_fu_520_p2;
    sc_signal< sc_lv<1> > sel_tmp6_demorgan_fu_532_p2;
    sc_signal< sc_lv<1> > or_cond9_fu_398_p2;
    sc_signal< sc_lv<1> > sel_tmp6_fu_538_p2;
    sc_signal< sc_lv<1> > sel_tmp7_fu_544_p2;
    sc_signal< sc_lv<1> > sel_tmp2_fu_526_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_558_p2;
    sc_signal< sc_lv<4> > sel_tmp3_cast_fu_550_p3;
    sc_signal< sc_lv<4> > sel_tmp_fu_512_p3;
    sc_signal< sc_lv<1> > sel_tmp13_demorgan_fu_572_p2;
    sc_signal< sc_lv<1> > or_cond1_fu_418_p2;
    sc_signal< sc_lv<1> > sel_tmp4_fu_578_p2;
    sc_signal< sc_lv<1> > sel_tmp22_demorgan_fu_590_p2;
    sc_signal< sc_lv<1> > or_cond2_fu_438_p2;
    sc_signal< sc_lv<1> > sel_tmp9_fu_596_p2;
    sc_signal< sc_lv<1> > sel_tmp3_fu_602_p2;
    sc_signal< sc_lv<1> > sel_tmp5_fu_584_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_616_p2;
    sc_signal< sc_lv<4> > sel_tmp11_cast_fu_608_p3;
    sc_signal< sc_lv<4> > sel_tmp8_fu_564_p3;
    sc_signal< sc_lv<1> > sel_tmp46_demorgan_fu_636_p2;
    sc_signal< sc_lv<1> > tmp_10_6_fu_472_p2;
    sc_signal< sc_lv<1> > sel_tmp13_fu_642_p2;
    sc_signal< sc_lv<1> > tmp7_fu_648_p2;
    sc_signal< sc_lv<1> > tmp_30_fu_464_p3;
    sc_signal< sc_lv<1> > sel_tmp11_fu_660_p2;
    sc_signal< sc_lv<1> > sel_tmp12_fu_665_p2;
    sc_signal< sc_lv<1> > tmp_8_fu_677_p2;
    sc_signal< sc_lv<4> > sel_tmp17_cast_fu_670_p3;
    sc_signal< sc_lv<4> > evictWay_lcssa_fu_682_p3;
    sc_signal< sc_lv<32> > evictWay_lcssa_cast_fu_689_p1;
    sc_signal< sc_lv<8> > p_Result_s_fu_697_p4;
    sc_signal< sc_lv<1> > val_assign_7_fu_748_p2;
    sc_signal< sc_lv<1> > val_assign_6_fu_743_p2;
    sc_signal< sc_lv<1> > val_assign_5_fu_738_p2;
    sc_signal< sc_lv<1> > val_assign_4_fu_733_p2;
    sc_signal< sc_lv<1> > val_assign_3_fu_728_p2;
    sc_signal< sc_lv<1> > val_assign_2_fu_723_p2;
    sc_signal< sc_lv<1> > val_assign_1_fu_718_p2;
    sc_signal< sc_lv<1> > val_assign_fu_713_p2;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<8> ap_const_lv8_3;
    static const sc_lv<8> ap_const_lv8_4;
    static const sc_lv<8> ap_const_lv8_5;
    static const sc_lv<8> ap_const_lv8_6;
    static const sc_lv<8> ap_const_lv8_7;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_clk_pos_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_dataArray_0_V_address0();
    void thread_dataArray_0_V_ce0();
    void thread_dataArray_0_V_d0();
    void thread_dataArray_0_V_we0();
    void thread_dataArray_1_V_address0();
    void thread_dataArray_1_V_ce0();
    void thread_dataArray_1_V_d0();
    void thread_dataArray_1_V_we0();
    void thread_dataArray_2_V_address0();
    void thread_dataArray_2_V_ce0();
    void thread_dataArray_2_V_d0();
    void thread_dataArray_2_V_we0();
    void thread_dataArray_3_V_address0();
    void thread_dataArray_3_V_ce0();
    void thread_dataArray_3_V_d0();
    void thread_dataArray_3_V_we0();
    void thread_dataArray_4_V_address0();
    void thread_dataArray_4_V_ce0();
    void thread_dataArray_4_V_d0();
    void thread_dataArray_4_V_we0();
    void thread_dataArray_5_V_address0();
    void thread_dataArray_5_V_ce0();
    void thread_dataArray_5_V_d0();
    void thread_dataArray_5_V_we0();
    void thread_dataArray_6_V_address0();
    void thread_dataArray_6_V_ce0();
    void thread_dataArray_6_V_d0();
    void thread_dataArray_6_V_we0();
    void thread_dataArray_7_V_address0();
    void thread_dataArray_7_V_ce0();
    void thread_dataArray_7_V_d0();
    void thread_dataArray_7_V_we0();
    void thread_evictWay_lcssa_cast_fu_689_p1();
    void thread_evictWay_lcssa_fu_682_p3();
    void thread_indexReg_V_fu_323_p4();
    void thread_mruArray_V_2_address0();
    void thread_mruArray_V_2_ce0();
    void thread_mruArray_V_2_d0();
    void thread_mruArray_V_2_we0();
    void thread_or_cond1_fu_418_p2();
    void thread_or_cond2_fu_438_p2();
    void thread_or_cond3_fu_458_p2();
    void thread_or_cond5_fu_492_p2();
    void thread_or_cond8_fu_378_p2();
    void thread_or_cond9_fu_398_p2();
    void thread_or_cond_fu_358_p2();
    void thread_p_Result_s_fu_697_p4();
    void thread_p_cast_fu_498_p3();
    void thread_sel_tmp10_fu_622_p3();
    void thread_sel_tmp11_cast_fu_608_p3();
    void thread_sel_tmp11_fu_660_p2();
    void thread_sel_tmp12_fu_665_p2();
    void thread_sel_tmp13_demorgan_fu_572_p2();
    void thread_sel_tmp13_fu_642_p2();
    void thread_sel_tmp14_fu_654_p2();
    void thread_sel_tmp17_cast_fu_670_p3();
    void thread_sel_tmp1_fu_520_p2();
    void thread_sel_tmp22_demorgan_fu_590_p2();
    void thread_sel_tmp2_fu_526_p2();
    void thread_sel_tmp33_demorgan_fu_630_p2();
    void thread_sel_tmp3_cast_fu_550_p3();
    void thread_sel_tmp3_fu_602_p2();
    void thread_sel_tmp46_demorgan_fu_636_p2();
    void thread_sel_tmp4_fu_578_p2();
    void thread_sel_tmp5_fu_584_p2();
    void thread_sel_tmp6_demorgan_fu_532_p2();
    void thread_sel_tmp6_fu_538_p2();
    void thread_sel_tmp7_fu_544_p2();
    void thread_sel_tmp8_fu_564_p3();
    void thread_sel_tmp9_fu_596_p2();
    void thread_sel_tmp_fu_512_p3();
    void thread_tagReg_V_fu_333_p4();
    void thread_tmp7_fu_648_p2();
    void thread_tmp_10_1_fu_372_p2();
    void thread_tmp_10_2_fu_392_p2();
    void thread_tmp_10_3_fu_412_p2();
    void thread_tmp_10_4_fu_432_p2();
    void thread_tmp_10_5_fu_452_p2();
    void thread_tmp_10_6_fu_472_p2();
    void thread_tmp_10_7_fu_486_p2();
    void thread_tmp_1_fu_352_p2();
    void thread_tmp_24_fu_348_p1();
    void thread_tmp_25_fu_364_p3();
    void thread_tmp_26_fu_384_p3();
    void thread_tmp_27_fu_404_p3();
    void thread_tmp_28_fu_424_p3();
    void thread_tmp_29_fu_444_p3();
    void thread_tmp_30_fu_464_p3();
    void thread_tmp_31_fu_478_p3();
    void thread_tmp_32_fu_693_p1();
    void thread_tmp_4_fu_506_p2();
    void thread_tmp_5_fu_558_p2();
    void thread_tmp_6_fu_616_p2();
    void thread_tmp_8_fu_677_p2();
    void thread_tmp_fu_343_p1();
    void thread_tmp_s_fu_707_p2();
    void thread_val_assign_1_fu_718_p2();
    void thread_val_assign_2_fu_723_p2();
    void thread_val_assign_3_fu_728_p2();
    void thread_val_assign_4_fu_733_p2();
    void thread_val_assign_5_fu_738_p2();
    void thread_val_assign_6_fu_743_p2();
    void thread_val_assign_7_fu_748_p2();
    void thread_val_assign_fu_713_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
