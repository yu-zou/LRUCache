-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity PLRUCache is
generic (
    C_M_AXI_DRAM_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_DRAM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_DRAM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_DRAM_DATA_WIDTH : INTEGER := 512;
    C_M_AXI_DRAM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_DRAM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_DRAM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_DRAM_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_DRAM_USER_VALUE : INTEGER := 0;
    C_M_AXI_DRAM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_DRAM_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_dram_AWVALID : OUT STD_LOGIC;
    m_axi_dram_AWREADY : IN STD_LOGIC;
    m_axi_dram_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_DRAM_ADDR_WIDTH-1 downto 0);
    m_axi_dram_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_DRAM_ID_WIDTH-1 downto 0);
    m_axi_dram_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_dram_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_dram_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dram_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dram_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dram_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_dram_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dram_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dram_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_DRAM_AWUSER_WIDTH-1 downto 0);
    m_axi_dram_WVALID : OUT STD_LOGIC;
    m_axi_dram_WREADY : IN STD_LOGIC;
    m_axi_dram_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DRAM_DATA_WIDTH-1 downto 0);
    m_axi_dram_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DRAM_DATA_WIDTH/8-1 downto 0);
    m_axi_dram_WLAST : OUT STD_LOGIC;
    m_axi_dram_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_DRAM_ID_WIDTH-1 downto 0);
    m_axi_dram_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_DRAM_WUSER_WIDTH-1 downto 0);
    m_axi_dram_ARVALID : OUT STD_LOGIC;
    m_axi_dram_ARREADY : IN STD_LOGIC;
    m_axi_dram_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_DRAM_ADDR_WIDTH-1 downto 0);
    m_axi_dram_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_DRAM_ID_WIDTH-1 downto 0);
    m_axi_dram_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_dram_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_dram_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dram_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dram_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dram_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_dram_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dram_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dram_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_DRAM_ARUSER_WIDTH-1 downto 0);
    m_axi_dram_RVALID : IN STD_LOGIC;
    m_axi_dram_RREADY : OUT STD_LOGIC;
    m_axi_dram_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DRAM_DATA_WIDTH-1 downto 0);
    m_axi_dram_RLAST : IN STD_LOGIC;
    m_axi_dram_RID : IN STD_LOGIC_VECTOR (C_M_AXI_DRAM_ID_WIDTH-1 downto 0);
    m_axi_dram_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_DRAM_RUSER_WIDTH-1 downto 0);
    m_axi_dram_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dram_BVALID : IN STD_LOGIC;
    m_axi_dram_BREADY : OUT STD_LOGIC;
    m_axi_dram_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dram_BID : IN STD_LOGIC_VECTOR (C_M_AXI_DRAM_ID_WIDTH-1 downto 0);
    m_axi_dram_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_DRAM_BUSER_WIDTH-1 downto 0);
    i_addr_V : IN STD_LOGIC_VECTOR (31 downto 0);
    i_wdata_V : IN STD_LOGIC_VECTOR (511 downto 0);
    i_op : IN STD_LOGIC;
    dram_V : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (511 downto 0) );
end;


architecture behav of PLRUCache is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "PLRUCache,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k325tffg900-2,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.375000,HLS_SYN_LAT=8,HLS_SYN_TPT=none,HLS_SYN_MEM=90,HLS_SYN_DSP=0,HLS_SYN_FF=4738,HLS_SYN_LUT=3979,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal validArray_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal validArray_V_ce0 : STD_LOGIC;
    signal validArray_V_we0 : STD_LOGIC;
    signal validArray_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal validArray_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal tagArray_V_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal tagArray_V_0_ce0 : STD_LOGIC;
    signal tagArray_V_0_we0 : STD_LOGIC;
    signal tagArray_V_0_d0 : STD_LOGIC_VECTOR (27 downto 0);
    signal tagArray_V_0_q0 : STD_LOGIC_VECTOR (27 downto 0);
    signal tagArray_V_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal tagArray_V_1_ce0 : STD_LOGIC;
    signal tagArray_V_1_we0 : STD_LOGIC;
    signal tagArray_V_1_d0 : STD_LOGIC_VECTOR (27 downto 0);
    signal tagArray_V_1_q0 : STD_LOGIC_VECTOR (27 downto 0);
    signal tagArray_V_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal tagArray_V_2_ce0 : STD_LOGIC;
    signal tagArray_V_2_we0 : STD_LOGIC;
    signal tagArray_V_2_d0 : STD_LOGIC_VECTOR (27 downto 0);
    signal tagArray_V_2_q0 : STD_LOGIC_VECTOR (27 downto 0);
    signal tagArray_V_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal tagArray_V_3_ce0 : STD_LOGIC;
    signal tagArray_V_3_we0 : STD_LOGIC;
    signal tagArray_V_3_d0 : STD_LOGIC_VECTOR (27 downto 0);
    signal tagArray_V_3_q0 : STD_LOGIC_VECTOR (27 downto 0);
    signal dataArray_V_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal dataArray_V_0_ce0 : STD_LOGIC;
    signal dataArray_V_0_we0 : STD_LOGIC;
    signal dataArray_V_0_d0 : STD_LOGIC_VECTOR (511 downto 0);
    signal dataArray_V_0_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal dataArray_V_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal dataArray_V_1_ce0 : STD_LOGIC;
    signal dataArray_V_1_we0 : STD_LOGIC;
    signal dataArray_V_1_d0 : STD_LOGIC_VECTOR (511 downto 0);
    signal dataArray_V_1_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal dataArray_V_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal dataArray_V_2_ce0 : STD_LOGIC;
    signal dataArray_V_2_we0 : STD_LOGIC;
    signal dataArray_V_2_d0 : STD_LOGIC_VECTOR (511 downto 0);
    signal dataArray_V_2_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal dataArray_V_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal dataArray_V_3_ce0 : STD_LOGIC;
    signal dataArray_V_3_we0 : STD_LOGIC;
    signal dataArray_V_3_d0 : STD_LOGIC_VECTOR (511 downto 0);
    signal dataArray_V_3_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal mruArray_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mruArray_V_ce0 : STD_LOGIC;
    signal mruArray_V_we0 : STD_LOGIC;
    signal mruArray_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mruArray_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal dram_AWVALID : STD_LOGIC;
    signal dram_AWREADY : STD_LOGIC;
    signal dram_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal dram_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal dram_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal dram_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal dram_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal dram_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal dram_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal dram_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal dram_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal dram_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal dram_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dram_WVALID : STD_LOGIC;
    signal dram_WREADY : STD_LOGIC;
    signal dram_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal dram_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal dram_WLAST : STD_LOGIC;
    signal dram_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal dram_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dram_ARVALID : STD_LOGIC;
    signal dram_ARREADY : STD_LOGIC;
    signal dram_RVALID : STD_LOGIC;
    signal dram_RREADY : STD_LOGIC;
    signal dram_RDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal dram_RLAST : STD_LOGIC;
    signal dram_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal dram_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dram_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal dram_BVALID : STD_LOGIC;
    signal dram_BREADY : STD_LOGIC;
    signal dram_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal dram_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal dram_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_fu_340_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Result_2_reg_501 : STD_LOGIC_VECTOR (27 downto 0);
    signal i_op_read_read_fu_108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal dram_V1_reg_519 : STD_LOGIC_VECTOR (25 downto 0);
    signal validArray_V_load_reg_525 : STD_LOGIC_VECTOR (3 downto 0);
    signal tag_0_V_reg_533 : STD_LOGIC_VECTOR (27 downto 0);
    signal tag_1_V_reg_541 : STD_LOGIC_VECTOR (27 downto 0);
    signal tag_2_V_reg_549 : STD_LOGIC_VECTOR (27 downto 0);
    signal tag_3_V_reg_557 : STD_LOGIC_VECTOR (27 downto 0);
    signal brmerge_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_565 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge1_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge1_reg_569 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_ReadHit_fu_269_ap_return : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_ReadHit_fu_269_ap_idle : STD_LOGIC;
    signal grp_ReadHit_fu_269_ap_ready : STD_LOGIC;
    signal grp_ReadHit_fu_269_ap_done : STD_LOGIC;
    signal grp_ReadMiss_fu_201_ap_start : STD_LOGIC;
    signal grp_ReadMiss_fu_201_ap_done : STD_LOGIC;
    signal grp_ReadMiss_fu_201_ap_idle : STD_LOGIC;
    signal grp_ReadMiss_fu_201_ap_ready : STD_LOGIC;
    signal grp_ReadMiss_fu_201_m_axi_dram_V_AWVALID : STD_LOGIC;
    signal grp_ReadMiss_fu_201_m_axi_dram_V_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ReadMiss_fu_201_m_axi_dram_V_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_ReadMiss_fu_201_m_axi_dram_V_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ReadMiss_fu_201_m_axi_dram_V_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_ReadMiss_fu_201_m_axi_dram_V_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_ReadMiss_fu_201_m_axi_dram_V_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_ReadMiss_fu_201_m_axi_dram_V_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ReadMiss_fu_201_m_axi_dram_V_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_ReadMiss_fu_201_m_axi_dram_V_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ReadMiss_fu_201_m_axi_dram_V_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ReadMiss_fu_201_m_axi_dram_V_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_ReadMiss_fu_201_m_axi_dram_V_WVALID : STD_LOGIC;
    signal grp_ReadMiss_fu_201_m_axi_dram_V_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_ReadMiss_fu_201_m_axi_dram_V_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ReadMiss_fu_201_m_axi_dram_V_WLAST : STD_LOGIC;
    signal grp_ReadMiss_fu_201_m_axi_dram_V_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_ReadMiss_fu_201_m_axi_dram_V_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_ReadMiss_fu_201_m_axi_dram_V_ARVALID : STD_LOGIC;
    signal grp_ReadMiss_fu_201_m_axi_dram_V_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ReadMiss_fu_201_m_axi_dram_V_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_ReadMiss_fu_201_m_axi_dram_V_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ReadMiss_fu_201_m_axi_dram_V_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_ReadMiss_fu_201_m_axi_dram_V_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_ReadMiss_fu_201_m_axi_dram_V_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_ReadMiss_fu_201_m_axi_dram_V_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ReadMiss_fu_201_m_axi_dram_V_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_ReadMiss_fu_201_m_axi_dram_V_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ReadMiss_fu_201_m_axi_dram_V_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ReadMiss_fu_201_m_axi_dram_V_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_ReadMiss_fu_201_m_axi_dram_V_RREADY : STD_LOGIC;
    signal grp_ReadMiss_fu_201_m_axi_dram_V_BREADY : STD_LOGIC;
    signal grp_ReadMiss_fu_201_validArray_V_4_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ReadMiss_fu_201_validArray_V_4_ce0 : STD_LOGIC;
    signal grp_ReadMiss_fu_201_validArray_V_4_we0 : STD_LOGIC;
    signal grp_ReadMiss_fu_201_validArray_V_4_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ReadMiss_fu_201_tagArray_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ReadMiss_fu_201_tagArray_0_V_ce0 : STD_LOGIC;
    signal grp_ReadMiss_fu_201_tagArray_0_V_we0 : STD_LOGIC;
    signal grp_ReadMiss_fu_201_tagArray_0_V_d0 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_ReadMiss_fu_201_tagArray_1_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ReadMiss_fu_201_tagArray_1_V_ce0 : STD_LOGIC;
    signal grp_ReadMiss_fu_201_tagArray_1_V_we0 : STD_LOGIC;
    signal grp_ReadMiss_fu_201_tagArray_1_V_d0 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_ReadMiss_fu_201_tagArray_2_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ReadMiss_fu_201_tagArray_2_V_ce0 : STD_LOGIC;
    signal grp_ReadMiss_fu_201_tagArray_2_V_we0 : STD_LOGIC;
    signal grp_ReadMiss_fu_201_tagArray_2_V_d0 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_ReadMiss_fu_201_tagArray_3_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ReadMiss_fu_201_tagArray_3_V_ce0 : STD_LOGIC;
    signal grp_ReadMiss_fu_201_tagArray_3_V_we0 : STD_LOGIC;
    signal grp_ReadMiss_fu_201_tagArray_3_V_d0 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_ReadMiss_fu_201_dataArray_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ReadMiss_fu_201_dataArray_0_V_ce0 : STD_LOGIC;
    signal grp_ReadMiss_fu_201_dataArray_0_V_we0 : STD_LOGIC;
    signal grp_ReadMiss_fu_201_dataArray_0_V_d0 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_ReadMiss_fu_201_dataArray_1_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ReadMiss_fu_201_dataArray_1_V_ce0 : STD_LOGIC;
    signal grp_ReadMiss_fu_201_dataArray_1_V_we0 : STD_LOGIC;
    signal grp_ReadMiss_fu_201_dataArray_1_V_d0 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_ReadMiss_fu_201_dataArray_2_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ReadMiss_fu_201_dataArray_2_V_ce0 : STD_LOGIC;
    signal grp_ReadMiss_fu_201_dataArray_2_V_we0 : STD_LOGIC;
    signal grp_ReadMiss_fu_201_dataArray_2_V_d0 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_ReadMiss_fu_201_dataArray_3_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ReadMiss_fu_201_dataArray_3_V_ce0 : STD_LOGIC;
    signal grp_ReadMiss_fu_201_dataArray_3_V_we0 : STD_LOGIC;
    signal grp_ReadMiss_fu_201_dataArray_3_V_d0 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_ReadMiss_fu_201_mruArray_V_4_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ReadMiss_fu_201_mruArray_V_4_ce0 : STD_LOGIC;
    signal grp_ReadMiss_fu_201_mruArray_V_4_we0 : STD_LOGIC;
    signal grp_ReadMiss_fu_201_mruArray_V_4_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ReadMiss_fu_201_ap_return : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_WriteMiss_fu_235_ap_start : STD_LOGIC;
    signal grp_WriteMiss_fu_235_ap_done : STD_LOGIC;
    signal grp_WriteMiss_fu_235_ap_idle : STD_LOGIC;
    signal grp_WriteMiss_fu_235_ap_ready : STD_LOGIC;
    signal grp_WriteMiss_fu_235_m_axi_dram_V_AWVALID : STD_LOGIC;
    signal grp_WriteMiss_fu_235_m_axi_dram_V_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_WriteMiss_fu_235_m_axi_dram_V_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_WriteMiss_fu_235_m_axi_dram_V_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_WriteMiss_fu_235_m_axi_dram_V_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_WriteMiss_fu_235_m_axi_dram_V_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_WriteMiss_fu_235_m_axi_dram_V_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_WriteMiss_fu_235_m_axi_dram_V_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteMiss_fu_235_m_axi_dram_V_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_WriteMiss_fu_235_m_axi_dram_V_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteMiss_fu_235_m_axi_dram_V_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteMiss_fu_235_m_axi_dram_V_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_WriteMiss_fu_235_m_axi_dram_V_WVALID : STD_LOGIC;
    signal grp_WriteMiss_fu_235_m_axi_dram_V_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_WriteMiss_fu_235_m_axi_dram_V_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_WriteMiss_fu_235_m_axi_dram_V_WLAST : STD_LOGIC;
    signal grp_WriteMiss_fu_235_m_axi_dram_V_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_WriteMiss_fu_235_m_axi_dram_V_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_WriteMiss_fu_235_m_axi_dram_V_ARVALID : STD_LOGIC;
    signal grp_WriteMiss_fu_235_m_axi_dram_V_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_WriteMiss_fu_235_m_axi_dram_V_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_WriteMiss_fu_235_m_axi_dram_V_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_WriteMiss_fu_235_m_axi_dram_V_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_WriteMiss_fu_235_m_axi_dram_V_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_WriteMiss_fu_235_m_axi_dram_V_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_WriteMiss_fu_235_m_axi_dram_V_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteMiss_fu_235_m_axi_dram_V_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_WriteMiss_fu_235_m_axi_dram_V_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteMiss_fu_235_m_axi_dram_V_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteMiss_fu_235_m_axi_dram_V_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_WriteMiss_fu_235_m_axi_dram_V_RREADY : STD_LOGIC;
    signal grp_WriteMiss_fu_235_m_axi_dram_V_BREADY : STD_LOGIC;
    signal grp_WriteMiss_fu_235_validArray_V_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteMiss_fu_235_validArray_V_2_ce0 : STD_LOGIC;
    signal grp_WriteMiss_fu_235_validArray_V_2_we0 : STD_LOGIC;
    signal grp_WriteMiss_fu_235_validArray_V_2_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteMiss_fu_235_tagArray_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteMiss_fu_235_tagArray_0_V_ce0 : STD_LOGIC;
    signal grp_WriteMiss_fu_235_tagArray_0_V_we0 : STD_LOGIC;
    signal grp_WriteMiss_fu_235_tagArray_0_V_d0 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_WriteMiss_fu_235_tagArray_1_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteMiss_fu_235_tagArray_1_V_ce0 : STD_LOGIC;
    signal grp_WriteMiss_fu_235_tagArray_1_V_we0 : STD_LOGIC;
    signal grp_WriteMiss_fu_235_tagArray_1_V_d0 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_WriteMiss_fu_235_tagArray_2_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteMiss_fu_235_tagArray_2_V_ce0 : STD_LOGIC;
    signal grp_WriteMiss_fu_235_tagArray_2_V_we0 : STD_LOGIC;
    signal grp_WriteMiss_fu_235_tagArray_2_V_d0 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_WriteMiss_fu_235_tagArray_3_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteMiss_fu_235_tagArray_3_V_ce0 : STD_LOGIC;
    signal grp_WriteMiss_fu_235_tagArray_3_V_we0 : STD_LOGIC;
    signal grp_WriteMiss_fu_235_tagArray_3_V_d0 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_WriteMiss_fu_235_mruArray_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteMiss_fu_235_mruArray_V_ce0 : STD_LOGIC;
    signal grp_WriteMiss_fu_235_mruArray_V_we0 : STD_LOGIC;
    signal grp_WriteMiss_fu_235_mruArray_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteMiss_fu_235_dataArray_V_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteMiss_fu_235_dataArray_V_0_ce0 : STD_LOGIC;
    signal grp_WriteMiss_fu_235_dataArray_V_0_we0 : STD_LOGIC;
    signal grp_WriteMiss_fu_235_dataArray_V_0_d0 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_WriteMiss_fu_235_dataArray_V_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteMiss_fu_235_dataArray_V_1_ce0 : STD_LOGIC;
    signal grp_WriteMiss_fu_235_dataArray_V_1_we0 : STD_LOGIC;
    signal grp_WriteMiss_fu_235_dataArray_V_1_d0 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_WriteMiss_fu_235_dataArray_V_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteMiss_fu_235_dataArray_V_2_ce0 : STD_LOGIC;
    signal grp_WriteMiss_fu_235_dataArray_V_2_we0 : STD_LOGIC;
    signal grp_WriteMiss_fu_235_dataArray_V_2_d0 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_WriteMiss_fu_235_dataArray_V_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteMiss_fu_235_dataArray_V_3_ce0 : STD_LOGIC;
    signal grp_WriteMiss_fu_235_dataArray_V_3_we0 : STD_LOGIC;
    signal grp_WriteMiss_fu_235_dataArray_V_3_d0 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_ReadHit_fu_269_ap_start : STD_LOGIC;
    signal grp_ReadHit_fu_269_dataArray_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ReadHit_fu_269_dataArray_0_V_ce0 : STD_LOGIC;
    signal grp_ReadHit_fu_269_dataArray_1_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ReadHit_fu_269_dataArray_1_V_ce0 : STD_LOGIC;
    signal grp_ReadHit_fu_269_dataArray_2_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ReadHit_fu_269_dataArray_2_V_ce0 : STD_LOGIC;
    signal grp_ReadHit_fu_269_dataArray_3_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ReadHit_fu_269_dataArray_3_V_ce0 : STD_LOGIC;
    signal grp_ReadHit_fu_269_mruArray_V_6_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ReadHit_fu_269_mruArray_V_6_ce0 : STD_LOGIC;
    signal grp_ReadHit_fu_269_mruArray_V_6_we0 : STD_LOGIC;
    signal grp_ReadHit_fu_269_mruArray_V_6_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteHit_fu_294_ap_start : STD_LOGIC;
    signal grp_WriteHit_fu_294_ap_done : STD_LOGIC;
    signal grp_WriteHit_fu_294_ap_idle : STD_LOGIC;
    signal grp_WriteHit_fu_294_ap_ready : STD_LOGIC;
    signal grp_WriteHit_fu_294_dataArray_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteHit_fu_294_dataArray_0_V_ce0 : STD_LOGIC;
    signal grp_WriteHit_fu_294_dataArray_0_V_we0 : STD_LOGIC;
    signal grp_WriteHit_fu_294_dataArray_0_V_d0 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_WriteHit_fu_294_dataArray_1_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteHit_fu_294_dataArray_1_V_ce0 : STD_LOGIC;
    signal grp_WriteHit_fu_294_dataArray_1_V_we0 : STD_LOGIC;
    signal grp_WriteHit_fu_294_dataArray_1_V_d0 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_WriteHit_fu_294_dataArray_2_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteHit_fu_294_dataArray_2_V_ce0 : STD_LOGIC;
    signal grp_WriteHit_fu_294_dataArray_2_V_we0 : STD_LOGIC;
    signal grp_WriteHit_fu_294_dataArray_2_V_d0 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_WriteHit_fu_294_dataArray_3_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteHit_fu_294_dataArray_3_V_ce0 : STD_LOGIC;
    signal grp_WriteHit_fu_294_dataArray_3_V_we0 : STD_LOGIC;
    signal grp_WriteHit_fu_294_dataArray_3_V_d0 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_WriteHit_fu_294_mruArray_V_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteHit_fu_294_mruArray_V_2_ce0 : STD_LOGIC;
    signal grp_WriteHit_fu_294_mruArray_V_2_we0 : STD_LOGIC;
    signal grp_WriteHit_fu_294_mruArray_V_2_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_agg_result_V_2_phi_fu_189_p8 : STD_LOGIC_VECTOR (511 downto 0);
    signal agg_result_V_2_reg_185 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_predicate_op65_call_state6 : BOOLEAN;
    signal ap_predicate_op67_call_state6 : BOOLEAN;
    signal ap_block_state6_on_subcall_done : BOOLEAN;
    signal grp_ReadMiss_fu_201_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_WriteMiss_fu_235_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_ReadHit_fu_269_ap_start_reg : STD_LOGIC := '0';
    signal grp_WriteHit_fu_294_ap_start_reg : STD_LOGIC := '0';
    signal tmp_9_fu_331_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_321_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_360_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_375_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_1_fu_383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_394_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_2_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_413_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_3_fu_421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_3_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_2_fu_407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_1_fu_388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_32_3_fu_432_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_450_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_op_not_fu_456_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_op_not_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_condition_758 : BOOLEAN;

    component ReadMiss IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        i_addr_V : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_dram_V_AWVALID : OUT STD_LOGIC;
        m_axi_dram_V_AWREADY : IN STD_LOGIC;
        m_axi_dram_V_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_dram_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dram_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_dram_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_dram_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dram_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dram_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dram_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_dram_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dram_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dram_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dram_V_WVALID : OUT STD_LOGIC;
        m_axi_dram_V_WREADY : IN STD_LOGIC;
        m_axi_dram_V_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_dram_V_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_dram_V_WLAST : OUT STD_LOGIC;
        m_axi_dram_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dram_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dram_V_ARVALID : OUT STD_LOGIC;
        m_axi_dram_V_ARREADY : IN STD_LOGIC;
        m_axi_dram_V_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_dram_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dram_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_dram_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_dram_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dram_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dram_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dram_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_dram_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dram_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dram_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dram_V_RVALID : IN STD_LOGIC;
        m_axi_dram_V_RREADY : OUT STD_LOGIC;
        m_axi_dram_V_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_dram_V_RLAST : IN STD_LOGIC;
        m_axi_dram_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dram_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dram_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dram_V_BVALID : IN STD_LOGIC;
        m_axi_dram_V_BREADY : OUT STD_LOGIC;
        m_axi_dram_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dram_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dram_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        dram_V_offset : IN STD_LOGIC_VECTOR (25 downto 0);
        valid_V : IN STD_LOGIC_VECTOR (3 downto 0);
        tag_0_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        tag_1_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        tag_2_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        tag_3_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        validArray_V_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        validArray_V_4_ce0 : OUT STD_LOGIC;
        validArray_V_4_we0 : OUT STD_LOGIC;
        validArray_V_4_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        tagArray_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        tagArray_0_V_ce0 : OUT STD_LOGIC;
        tagArray_0_V_we0 : OUT STD_LOGIC;
        tagArray_0_V_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
        tagArray_1_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        tagArray_1_V_ce0 : OUT STD_LOGIC;
        tagArray_1_V_we0 : OUT STD_LOGIC;
        tagArray_1_V_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
        tagArray_2_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        tagArray_2_V_ce0 : OUT STD_LOGIC;
        tagArray_2_V_we0 : OUT STD_LOGIC;
        tagArray_2_V_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
        tagArray_3_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        tagArray_3_V_ce0 : OUT STD_LOGIC;
        tagArray_3_V_we0 : OUT STD_LOGIC;
        tagArray_3_V_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
        dataArray_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        dataArray_0_V_ce0 : OUT STD_LOGIC;
        dataArray_0_V_we0 : OUT STD_LOGIC;
        dataArray_0_V_d0 : OUT STD_LOGIC_VECTOR (511 downto 0);
        dataArray_0_V_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
        dataArray_1_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        dataArray_1_V_ce0 : OUT STD_LOGIC;
        dataArray_1_V_we0 : OUT STD_LOGIC;
        dataArray_1_V_d0 : OUT STD_LOGIC_VECTOR (511 downto 0);
        dataArray_1_V_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
        dataArray_2_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        dataArray_2_V_ce0 : OUT STD_LOGIC;
        dataArray_2_V_we0 : OUT STD_LOGIC;
        dataArray_2_V_d0 : OUT STD_LOGIC_VECTOR (511 downto 0);
        dataArray_2_V_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
        dataArray_3_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        dataArray_3_V_ce0 : OUT STD_LOGIC;
        dataArray_3_V_we0 : OUT STD_LOGIC;
        dataArray_3_V_d0 : OUT STD_LOGIC_VECTOR (511 downto 0);
        dataArray_3_V_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
        mruArray_V_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        mruArray_V_4_ce0 : OUT STD_LOGIC;
        mruArray_V_4_we0 : OUT STD_LOGIC;
        mruArray_V_4_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        mruArray_V_4_q0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (511 downto 0) );
    end component;


    component WriteMiss IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        i_addr_V : IN STD_LOGIC_VECTOR (31 downto 0);
        i_wdata_V : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_dram_V_AWVALID : OUT STD_LOGIC;
        m_axi_dram_V_AWREADY : IN STD_LOGIC;
        m_axi_dram_V_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_dram_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dram_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_dram_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_dram_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dram_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dram_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dram_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_dram_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dram_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dram_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dram_V_WVALID : OUT STD_LOGIC;
        m_axi_dram_V_WREADY : IN STD_LOGIC;
        m_axi_dram_V_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_dram_V_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_dram_V_WLAST : OUT STD_LOGIC;
        m_axi_dram_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dram_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dram_V_ARVALID : OUT STD_LOGIC;
        m_axi_dram_V_ARREADY : IN STD_LOGIC;
        m_axi_dram_V_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_dram_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dram_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_dram_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_dram_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dram_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dram_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dram_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_dram_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dram_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dram_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dram_V_RVALID : IN STD_LOGIC;
        m_axi_dram_V_RREADY : OUT STD_LOGIC;
        m_axi_dram_V_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_dram_V_RLAST : IN STD_LOGIC;
        m_axi_dram_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dram_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dram_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dram_V_BVALID : IN STD_LOGIC;
        m_axi_dram_V_BREADY : OUT STD_LOGIC;
        m_axi_dram_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dram_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dram_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        dram_V_offset : IN STD_LOGIC_VECTOR (25 downto 0);
        valid_V : IN STD_LOGIC_VECTOR (3 downto 0);
        tag_0_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        tag_1_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        tag_2_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        tag_3_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        validArray_V_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        validArray_V_2_ce0 : OUT STD_LOGIC;
        validArray_V_2_we0 : OUT STD_LOGIC;
        validArray_V_2_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        tagArray_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        tagArray_0_V_ce0 : OUT STD_LOGIC;
        tagArray_0_V_we0 : OUT STD_LOGIC;
        tagArray_0_V_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
        tagArray_1_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        tagArray_1_V_ce0 : OUT STD_LOGIC;
        tagArray_1_V_we0 : OUT STD_LOGIC;
        tagArray_1_V_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
        tagArray_2_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        tagArray_2_V_ce0 : OUT STD_LOGIC;
        tagArray_2_V_we0 : OUT STD_LOGIC;
        tagArray_2_V_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
        tagArray_3_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        tagArray_3_V_ce0 : OUT STD_LOGIC;
        tagArray_3_V_we0 : OUT STD_LOGIC;
        tagArray_3_V_d0 : OUT STD_LOGIC_VECTOR (27 downto 0);
        mruArray_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        mruArray_V_ce0 : OUT STD_LOGIC;
        mruArray_V_we0 : OUT STD_LOGIC;
        mruArray_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        mruArray_V_q0 : IN STD_LOGIC_VECTOR (3 downto 0);
        dataArray_V_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        dataArray_V_0_ce0 : OUT STD_LOGIC;
        dataArray_V_0_we0 : OUT STD_LOGIC;
        dataArray_V_0_d0 : OUT STD_LOGIC_VECTOR (511 downto 0);
        dataArray_V_0_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
        dataArray_V_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        dataArray_V_1_ce0 : OUT STD_LOGIC;
        dataArray_V_1_we0 : OUT STD_LOGIC;
        dataArray_V_1_d0 : OUT STD_LOGIC_VECTOR (511 downto 0);
        dataArray_V_1_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
        dataArray_V_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        dataArray_V_2_ce0 : OUT STD_LOGIC;
        dataArray_V_2_we0 : OUT STD_LOGIC;
        dataArray_V_2_d0 : OUT STD_LOGIC_VECTOR (511 downto 0);
        dataArray_V_2_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
        dataArray_V_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        dataArray_V_3_ce0 : OUT STD_LOGIC;
        dataArray_V_3_we0 : OUT STD_LOGIC;
        dataArray_V_3_d0 : OUT STD_LOGIC_VECTOR (511 downto 0);
        dataArray_V_3_q0 : IN STD_LOGIC_VECTOR (511 downto 0) );
    end component;


    component ReadHit IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        i_addr_V : IN STD_LOGIC_VECTOR (31 downto 0);
        valid_V : IN STD_LOGIC_VECTOR (3 downto 0);
        tag_0_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        tag_1_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        tag_2_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        tag_3_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        dataArray_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        dataArray_0_V_ce0 : OUT STD_LOGIC;
        dataArray_0_V_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
        dataArray_1_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        dataArray_1_V_ce0 : OUT STD_LOGIC;
        dataArray_1_V_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
        dataArray_2_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        dataArray_2_V_ce0 : OUT STD_LOGIC;
        dataArray_2_V_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
        dataArray_3_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        dataArray_3_V_ce0 : OUT STD_LOGIC;
        dataArray_3_V_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
        mruArray_V_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        mruArray_V_6_ce0 : OUT STD_LOGIC;
        mruArray_V_6_we0 : OUT STD_LOGIC;
        mruArray_V_6_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        mruArray_V_6_q0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (511 downto 0) );
    end component;


    component WriteHit IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        i_addr_V : IN STD_LOGIC_VECTOR (31 downto 0);
        i_wdata_V : IN STD_LOGIC_VECTOR (511 downto 0);
        valid_V : IN STD_LOGIC_VECTOR (3 downto 0);
        tag_0_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        tag_1_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        tag_2_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        tag_3_V_read : IN STD_LOGIC_VECTOR (27 downto 0);
        dataArray_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        dataArray_0_V_ce0 : OUT STD_LOGIC;
        dataArray_0_V_we0 : OUT STD_LOGIC;
        dataArray_0_V_d0 : OUT STD_LOGIC_VECTOR (511 downto 0);
        dataArray_1_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        dataArray_1_V_ce0 : OUT STD_LOGIC;
        dataArray_1_V_we0 : OUT STD_LOGIC;
        dataArray_1_V_d0 : OUT STD_LOGIC_VECTOR (511 downto 0);
        dataArray_2_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        dataArray_2_V_ce0 : OUT STD_LOGIC;
        dataArray_2_V_we0 : OUT STD_LOGIC;
        dataArray_2_V_d0 : OUT STD_LOGIC_VECTOR (511 downto 0);
        dataArray_3_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        dataArray_3_V_ce0 : OUT STD_LOGIC;
        dataArray_3_V_we0 : OUT STD_LOGIC;
        dataArray_3_V_d0 : OUT STD_LOGIC_VECTOR (511 downto 0);
        mruArray_V_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        mruArray_V_2_ce0 : OUT STD_LOGIC;
        mruArray_V_2_we0 : OUT STD_LOGIC;
        mruArray_V_2_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        mruArray_V_2_q0 : IN STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component PLRUCache_validArdEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (3 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component PLRUCache_tagArraeOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (27 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component PLRUCache_dataArribs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (511 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (511 downto 0) );
    end component;


    component PLRUCache_dram_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    validArray_V_U : component PLRUCache_validArdEe
    generic map (
        DataWidth => 4,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => validArray_V_address0,
        ce0 => validArray_V_ce0,
        we0 => validArray_V_we0,
        d0 => validArray_V_d0,
        q0 => validArray_V_q0);

    tagArray_V_0_U : component PLRUCache_tagArraeOg
    generic map (
        DataWidth => 28,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => tagArray_V_0_address0,
        ce0 => tagArray_V_0_ce0,
        we0 => tagArray_V_0_we0,
        d0 => tagArray_V_0_d0,
        q0 => tagArray_V_0_q0);

    tagArray_V_1_U : component PLRUCache_tagArraeOg
    generic map (
        DataWidth => 28,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => tagArray_V_1_address0,
        ce0 => tagArray_V_1_ce0,
        we0 => tagArray_V_1_we0,
        d0 => tagArray_V_1_d0,
        q0 => tagArray_V_1_q0);

    tagArray_V_2_U : component PLRUCache_tagArraeOg
    generic map (
        DataWidth => 28,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => tagArray_V_2_address0,
        ce0 => tagArray_V_2_ce0,
        we0 => tagArray_V_2_we0,
        d0 => tagArray_V_2_d0,
        q0 => tagArray_V_2_q0);

    tagArray_V_3_U : component PLRUCache_tagArraeOg
    generic map (
        DataWidth => 28,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => tagArray_V_3_address0,
        ce0 => tagArray_V_3_ce0,
        we0 => tagArray_V_3_we0,
        d0 => tagArray_V_3_d0,
        q0 => tagArray_V_3_q0);

    dataArray_V_0_U : component PLRUCache_dataArribs
    generic map (
        DataWidth => 512,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => dataArray_V_0_address0,
        ce0 => dataArray_V_0_ce0,
        we0 => dataArray_V_0_we0,
        d0 => dataArray_V_0_d0,
        q0 => dataArray_V_0_q0);

    dataArray_V_1_U : component PLRUCache_dataArribs
    generic map (
        DataWidth => 512,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => dataArray_V_1_address0,
        ce0 => dataArray_V_1_ce0,
        we0 => dataArray_V_1_we0,
        d0 => dataArray_V_1_d0,
        q0 => dataArray_V_1_q0);

    dataArray_V_2_U : component PLRUCache_dataArribs
    generic map (
        DataWidth => 512,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => dataArray_V_2_address0,
        ce0 => dataArray_V_2_ce0,
        we0 => dataArray_V_2_we0,
        d0 => dataArray_V_2_d0,
        q0 => dataArray_V_2_q0);

    dataArray_V_3_U : component PLRUCache_dataArribs
    generic map (
        DataWidth => 512,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => dataArray_V_3_address0,
        ce0 => dataArray_V_3_ce0,
        we0 => dataArray_V_3_we0,
        d0 => dataArray_V_3_d0,
        q0 => dataArray_V_3_q0);

    mruArray_V_U : component PLRUCache_validArdEe
    generic map (
        DataWidth => 4,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => mruArray_V_address0,
        ce0 => mruArray_V_ce0,
        we0 => mruArray_V_we0,
        d0 => mruArray_V_d0,
        q0 => mruArray_V_q0);

    PLRUCache_dram_m_axi_U : component PLRUCache_dram_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 512,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_DRAM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_DRAM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_DRAM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_DRAM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_DRAM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_DRAM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_DRAM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_DRAM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_DRAM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_DRAM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_DRAM_CACHE_VALUE)
    port map (
        AWVALID => m_axi_dram_AWVALID,
        AWREADY => m_axi_dram_AWREADY,
        AWADDR => m_axi_dram_AWADDR,
        AWID => m_axi_dram_AWID,
        AWLEN => m_axi_dram_AWLEN,
        AWSIZE => m_axi_dram_AWSIZE,
        AWBURST => m_axi_dram_AWBURST,
        AWLOCK => m_axi_dram_AWLOCK,
        AWCACHE => m_axi_dram_AWCACHE,
        AWPROT => m_axi_dram_AWPROT,
        AWQOS => m_axi_dram_AWQOS,
        AWREGION => m_axi_dram_AWREGION,
        AWUSER => m_axi_dram_AWUSER,
        WVALID => m_axi_dram_WVALID,
        WREADY => m_axi_dram_WREADY,
        WDATA => m_axi_dram_WDATA,
        WSTRB => m_axi_dram_WSTRB,
        WLAST => m_axi_dram_WLAST,
        WID => m_axi_dram_WID,
        WUSER => m_axi_dram_WUSER,
        ARVALID => m_axi_dram_ARVALID,
        ARREADY => m_axi_dram_ARREADY,
        ARADDR => m_axi_dram_ARADDR,
        ARID => m_axi_dram_ARID,
        ARLEN => m_axi_dram_ARLEN,
        ARSIZE => m_axi_dram_ARSIZE,
        ARBURST => m_axi_dram_ARBURST,
        ARLOCK => m_axi_dram_ARLOCK,
        ARCACHE => m_axi_dram_ARCACHE,
        ARPROT => m_axi_dram_ARPROT,
        ARQOS => m_axi_dram_ARQOS,
        ARREGION => m_axi_dram_ARREGION,
        ARUSER => m_axi_dram_ARUSER,
        RVALID => m_axi_dram_RVALID,
        RREADY => m_axi_dram_RREADY,
        RDATA => m_axi_dram_RDATA,
        RLAST => m_axi_dram_RLAST,
        RID => m_axi_dram_RID,
        RUSER => m_axi_dram_RUSER,
        RRESP => m_axi_dram_RRESP,
        BVALID => m_axi_dram_BVALID,
        BREADY => m_axi_dram_BREADY,
        BRESP => m_axi_dram_BRESP,
        BID => m_axi_dram_BID,
        BUSER => m_axi_dram_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => dram_ARVALID,
        I_ARREADY => dram_ARREADY,
        I_ARADDR => grp_ReadMiss_fu_201_m_axi_dram_V_ARADDR,
        I_ARID => grp_ReadMiss_fu_201_m_axi_dram_V_ARID,
        I_ARLEN => grp_ReadMiss_fu_201_m_axi_dram_V_ARLEN,
        I_ARSIZE => grp_ReadMiss_fu_201_m_axi_dram_V_ARSIZE,
        I_ARLOCK => grp_ReadMiss_fu_201_m_axi_dram_V_ARLOCK,
        I_ARCACHE => grp_ReadMiss_fu_201_m_axi_dram_V_ARCACHE,
        I_ARQOS => grp_ReadMiss_fu_201_m_axi_dram_V_ARQOS,
        I_ARPROT => grp_ReadMiss_fu_201_m_axi_dram_V_ARPROT,
        I_ARUSER => grp_ReadMiss_fu_201_m_axi_dram_V_ARUSER,
        I_ARBURST => grp_ReadMiss_fu_201_m_axi_dram_V_ARBURST,
        I_ARREGION => grp_ReadMiss_fu_201_m_axi_dram_V_ARREGION,
        I_RVALID => dram_RVALID,
        I_RREADY => dram_RREADY,
        I_RDATA => dram_RDATA,
        I_RID => dram_RID,
        I_RUSER => dram_RUSER,
        I_RRESP => dram_RRESP,
        I_RLAST => dram_RLAST,
        I_AWVALID => dram_AWVALID,
        I_AWREADY => dram_AWREADY,
        I_AWADDR => dram_AWADDR,
        I_AWID => dram_AWID,
        I_AWLEN => dram_AWLEN,
        I_AWSIZE => dram_AWSIZE,
        I_AWLOCK => dram_AWLOCK,
        I_AWCACHE => dram_AWCACHE,
        I_AWQOS => dram_AWQOS,
        I_AWPROT => dram_AWPROT,
        I_AWUSER => dram_AWUSER,
        I_AWBURST => dram_AWBURST,
        I_AWREGION => dram_AWREGION,
        I_WVALID => dram_WVALID,
        I_WREADY => dram_WREADY,
        I_WDATA => dram_WDATA,
        I_WID => dram_WID,
        I_WUSER => dram_WUSER,
        I_WLAST => dram_WLAST,
        I_WSTRB => dram_WSTRB,
        I_BVALID => dram_BVALID,
        I_BREADY => dram_BREADY,
        I_BRESP => dram_BRESP,
        I_BID => dram_BID,
        I_BUSER => dram_BUSER);

    grp_ReadMiss_fu_201 : component ReadMiss
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_ReadMiss_fu_201_ap_start,
        ap_done => grp_ReadMiss_fu_201_ap_done,
        ap_idle => grp_ReadMiss_fu_201_ap_idle,
        ap_ready => grp_ReadMiss_fu_201_ap_ready,
        i_addr_V => i_addr_V,
        m_axi_dram_V_AWVALID => grp_ReadMiss_fu_201_m_axi_dram_V_AWVALID,
        m_axi_dram_V_AWREADY => dram_AWREADY,
        m_axi_dram_V_AWADDR => grp_ReadMiss_fu_201_m_axi_dram_V_AWADDR,
        m_axi_dram_V_AWID => grp_ReadMiss_fu_201_m_axi_dram_V_AWID,
        m_axi_dram_V_AWLEN => grp_ReadMiss_fu_201_m_axi_dram_V_AWLEN,
        m_axi_dram_V_AWSIZE => grp_ReadMiss_fu_201_m_axi_dram_V_AWSIZE,
        m_axi_dram_V_AWBURST => grp_ReadMiss_fu_201_m_axi_dram_V_AWBURST,
        m_axi_dram_V_AWLOCK => grp_ReadMiss_fu_201_m_axi_dram_V_AWLOCK,
        m_axi_dram_V_AWCACHE => grp_ReadMiss_fu_201_m_axi_dram_V_AWCACHE,
        m_axi_dram_V_AWPROT => grp_ReadMiss_fu_201_m_axi_dram_V_AWPROT,
        m_axi_dram_V_AWQOS => grp_ReadMiss_fu_201_m_axi_dram_V_AWQOS,
        m_axi_dram_V_AWREGION => grp_ReadMiss_fu_201_m_axi_dram_V_AWREGION,
        m_axi_dram_V_AWUSER => grp_ReadMiss_fu_201_m_axi_dram_V_AWUSER,
        m_axi_dram_V_WVALID => grp_ReadMiss_fu_201_m_axi_dram_V_WVALID,
        m_axi_dram_V_WREADY => dram_WREADY,
        m_axi_dram_V_WDATA => grp_ReadMiss_fu_201_m_axi_dram_V_WDATA,
        m_axi_dram_V_WSTRB => grp_ReadMiss_fu_201_m_axi_dram_V_WSTRB,
        m_axi_dram_V_WLAST => grp_ReadMiss_fu_201_m_axi_dram_V_WLAST,
        m_axi_dram_V_WID => grp_ReadMiss_fu_201_m_axi_dram_V_WID,
        m_axi_dram_V_WUSER => grp_ReadMiss_fu_201_m_axi_dram_V_WUSER,
        m_axi_dram_V_ARVALID => grp_ReadMiss_fu_201_m_axi_dram_V_ARVALID,
        m_axi_dram_V_ARREADY => dram_ARREADY,
        m_axi_dram_V_ARADDR => grp_ReadMiss_fu_201_m_axi_dram_V_ARADDR,
        m_axi_dram_V_ARID => grp_ReadMiss_fu_201_m_axi_dram_V_ARID,
        m_axi_dram_V_ARLEN => grp_ReadMiss_fu_201_m_axi_dram_V_ARLEN,
        m_axi_dram_V_ARSIZE => grp_ReadMiss_fu_201_m_axi_dram_V_ARSIZE,
        m_axi_dram_V_ARBURST => grp_ReadMiss_fu_201_m_axi_dram_V_ARBURST,
        m_axi_dram_V_ARLOCK => grp_ReadMiss_fu_201_m_axi_dram_V_ARLOCK,
        m_axi_dram_V_ARCACHE => grp_ReadMiss_fu_201_m_axi_dram_V_ARCACHE,
        m_axi_dram_V_ARPROT => grp_ReadMiss_fu_201_m_axi_dram_V_ARPROT,
        m_axi_dram_V_ARQOS => grp_ReadMiss_fu_201_m_axi_dram_V_ARQOS,
        m_axi_dram_V_ARREGION => grp_ReadMiss_fu_201_m_axi_dram_V_ARREGION,
        m_axi_dram_V_ARUSER => grp_ReadMiss_fu_201_m_axi_dram_V_ARUSER,
        m_axi_dram_V_RVALID => dram_RVALID,
        m_axi_dram_V_RREADY => grp_ReadMiss_fu_201_m_axi_dram_V_RREADY,
        m_axi_dram_V_RDATA => dram_RDATA,
        m_axi_dram_V_RLAST => dram_RLAST,
        m_axi_dram_V_RID => dram_RID,
        m_axi_dram_V_RUSER => dram_RUSER,
        m_axi_dram_V_RRESP => dram_RRESP,
        m_axi_dram_V_BVALID => dram_BVALID,
        m_axi_dram_V_BREADY => grp_ReadMiss_fu_201_m_axi_dram_V_BREADY,
        m_axi_dram_V_BRESP => dram_BRESP,
        m_axi_dram_V_BID => dram_BID,
        m_axi_dram_V_BUSER => dram_BUSER,
        dram_V_offset => dram_V1_reg_519,
        valid_V => validArray_V_load_reg_525,
        tag_0_V_read => tag_0_V_reg_533,
        tag_1_V_read => tag_1_V_reg_541,
        tag_2_V_read => tag_2_V_reg_549,
        tag_3_V_read => tag_3_V_reg_557,
        validArray_V_4_address0 => grp_ReadMiss_fu_201_validArray_V_4_address0,
        validArray_V_4_ce0 => grp_ReadMiss_fu_201_validArray_V_4_ce0,
        validArray_V_4_we0 => grp_ReadMiss_fu_201_validArray_V_4_we0,
        validArray_V_4_d0 => grp_ReadMiss_fu_201_validArray_V_4_d0,
        tagArray_0_V_address0 => grp_ReadMiss_fu_201_tagArray_0_V_address0,
        tagArray_0_V_ce0 => grp_ReadMiss_fu_201_tagArray_0_V_ce0,
        tagArray_0_V_we0 => grp_ReadMiss_fu_201_tagArray_0_V_we0,
        tagArray_0_V_d0 => grp_ReadMiss_fu_201_tagArray_0_V_d0,
        tagArray_1_V_address0 => grp_ReadMiss_fu_201_tagArray_1_V_address0,
        tagArray_1_V_ce0 => grp_ReadMiss_fu_201_tagArray_1_V_ce0,
        tagArray_1_V_we0 => grp_ReadMiss_fu_201_tagArray_1_V_we0,
        tagArray_1_V_d0 => grp_ReadMiss_fu_201_tagArray_1_V_d0,
        tagArray_2_V_address0 => grp_ReadMiss_fu_201_tagArray_2_V_address0,
        tagArray_2_V_ce0 => grp_ReadMiss_fu_201_tagArray_2_V_ce0,
        tagArray_2_V_we0 => grp_ReadMiss_fu_201_tagArray_2_V_we0,
        tagArray_2_V_d0 => grp_ReadMiss_fu_201_tagArray_2_V_d0,
        tagArray_3_V_address0 => grp_ReadMiss_fu_201_tagArray_3_V_address0,
        tagArray_3_V_ce0 => grp_ReadMiss_fu_201_tagArray_3_V_ce0,
        tagArray_3_V_we0 => grp_ReadMiss_fu_201_tagArray_3_V_we0,
        tagArray_3_V_d0 => grp_ReadMiss_fu_201_tagArray_3_V_d0,
        dataArray_0_V_address0 => grp_ReadMiss_fu_201_dataArray_0_V_address0,
        dataArray_0_V_ce0 => grp_ReadMiss_fu_201_dataArray_0_V_ce0,
        dataArray_0_V_we0 => grp_ReadMiss_fu_201_dataArray_0_V_we0,
        dataArray_0_V_d0 => grp_ReadMiss_fu_201_dataArray_0_V_d0,
        dataArray_0_V_q0 => dataArray_V_0_q0,
        dataArray_1_V_address0 => grp_ReadMiss_fu_201_dataArray_1_V_address0,
        dataArray_1_V_ce0 => grp_ReadMiss_fu_201_dataArray_1_V_ce0,
        dataArray_1_V_we0 => grp_ReadMiss_fu_201_dataArray_1_V_we0,
        dataArray_1_V_d0 => grp_ReadMiss_fu_201_dataArray_1_V_d0,
        dataArray_1_V_q0 => dataArray_V_1_q0,
        dataArray_2_V_address0 => grp_ReadMiss_fu_201_dataArray_2_V_address0,
        dataArray_2_V_ce0 => grp_ReadMiss_fu_201_dataArray_2_V_ce0,
        dataArray_2_V_we0 => grp_ReadMiss_fu_201_dataArray_2_V_we0,
        dataArray_2_V_d0 => grp_ReadMiss_fu_201_dataArray_2_V_d0,
        dataArray_2_V_q0 => dataArray_V_2_q0,
        dataArray_3_V_address0 => grp_ReadMiss_fu_201_dataArray_3_V_address0,
        dataArray_3_V_ce0 => grp_ReadMiss_fu_201_dataArray_3_V_ce0,
        dataArray_3_V_we0 => grp_ReadMiss_fu_201_dataArray_3_V_we0,
        dataArray_3_V_d0 => grp_ReadMiss_fu_201_dataArray_3_V_d0,
        dataArray_3_V_q0 => dataArray_V_3_q0,
        mruArray_V_4_address0 => grp_ReadMiss_fu_201_mruArray_V_4_address0,
        mruArray_V_4_ce0 => grp_ReadMiss_fu_201_mruArray_V_4_ce0,
        mruArray_V_4_we0 => grp_ReadMiss_fu_201_mruArray_V_4_we0,
        mruArray_V_4_d0 => grp_ReadMiss_fu_201_mruArray_V_4_d0,
        mruArray_V_4_q0 => mruArray_V_q0,
        ap_return => grp_ReadMiss_fu_201_ap_return);

    grp_WriteMiss_fu_235 : component WriteMiss
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_WriteMiss_fu_235_ap_start,
        ap_done => grp_WriteMiss_fu_235_ap_done,
        ap_idle => grp_WriteMiss_fu_235_ap_idle,
        ap_ready => grp_WriteMiss_fu_235_ap_ready,
        i_addr_V => i_addr_V,
        i_wdata_V => i_wdata_V,
        m_axi_dram_V_AWVALID => grp_WriteMiss_fu_235_m_axi_dram_V_AWVALID,
        m_axi_dram_V_AWREADY => dram_AWREADY,
        m_axi_dram_V_AWADDR => grp_WriteMiss_fu_235_m_axi_dram_V_AWADDR,
        m_axi_dram_V_AWID => grp_WriteMiss_fu_235_m_axi_dram_V_AWID,
        m_axi_dram_V_AWLEN => grp_WriteMiss_fu_235_m_axi_dram_V_AWLEN,
        m_axi_dram_V_AWSIZE => grp_WriteMiss_fu_235_m_axi_dram_V_AWSIZE,
        m_axi_dram_V_AWBURST => grp_WriteMiss_fu_235_m_axi_dram_V_AWBURST,
        m_axi_dram_V_AWLOCK => grp_WriteMiss_fu_235_m_axi_dram_V_AWLOCK,
        m_axi_dram_V_AWCACHE => grp_WriteMiss_fu_235_m_axi_dram_V_AWCACHE,
        m_axi_dram_V_AWPROT => grp_WriteMiss_fu_235_m_axi_dram_V_AWPROT,
        m_axi_dram_V_AWQOS => grp_WriteMiss_fu_235_m_axi_dram_V_AWQOS,
        m_axi_dram_V_AWREGION => grp_WriteMiss_fu_235_m_axi_dram_V_AWREGION,
        m_axi_dram_V_AWUSER => grp_WriteMiss_fu_235_m_axi_dram_V_AWUSER,
        m_axi_dram_V_WVALID => grp_WriteMiss_fu_235_m_axi_dram_V_WVALID,
        m_axi_dram_V_WREADY => dram_WREADY,
        m_axi_dram_V_WDATA => grp_WriteMiss_fu_235_m_axi_dram_V_WDATA,
        m_axi_dram_V_WSTRB => grp_WriteMiss_fu_235_m_axi_dram_V_WSTRB,
        m_axi_dram_V_WLAST => grp_WriteMiss_fu_235_m_axi_dram_V_WLAST,
        m_axi_dram_V_WID => grp_WriteMiss_fu_235_m_axi_dram_V_WID,
        m_axi_dram_V_WUSER => grp_WriteMiss_fu_235_m_axi_dram_V_WUSER,
        m_axi_dram_V_ARVALID => grp_WriteMiss_fu_235_m_axi_dram_V_ARVALID,
        m_axi_dram_V_ARREADY => ap_const_logic_0,
        m_axi_dram_V_ARADDR => grp_WriteMiss_fu_235_m_axi_dram_V_ARADDR,
        m_axi_dram_V_ARID => grp_WriteMiss_fu_235_m_axi_dram_V_ARID,
        m_axi_dram_V_ARLEN => grp_WriteMiss_fu_235_m_axi_dram_V_ARLEN,
        m_axi_dram_V_ARSIZE => grp_WriteMiss_fu_235_m_axi_dram_V_ARSIZE,
        m_axi_dram_V_ARBURST => grp_WriteMiss_fu_235_m_axi_dram_V_ARBURST,
        m_axi_dram_V_ARLOCK => grp_WriteMiss_fu_235_m_axi_dram_V_ARLOCK,
        m_axi_dram_V_ARCACHE => grp_WriteMiss_fu_235_m_axi_dram_V_ARCACHE,
        m_axi_dram_V_ARPROT => grp_WriteMiss_fu_235_m_axi_dram_V_ARPROT,
        m_axi_dram_V_ARQOS => grp_WriteMiss_fu_235_m_axi_dram_V_ARQOS,
        m_axi_dram_V_ARREGION => grp_WriteMiss_fu_235_m_axi_dram_V_ARREGION,
        m_axi_dram_V_ARUSER => grp_WriteMiss_fu_235_m_axi_dram_V_ARUSER,
        m_axi_dram_V_RVALID => ap_const_logic_0,
        m_axi_dram_V_RREADY => grp_WriteMiss_fu_235_m_axi_dram_V_RREADY,
        m_axi_dram_V_RDATA => ap_const_lv512_lc_1,
        m_axi_dram_V_RLAST => ap_const_logic_0,
        m_axi_dram_V_RID => ap_const_lv1_0,
        m_axi_dram_V_RUSER => ap_const_lv1_0,
        m_axi_dram_V_RRESP => ap_const_lv2_0,
        m_axi_dram_V_BVALID => dram_BVALID,
        m_axi_dram_V_BREADY => grp_WriteMiss_fu_235_m_axi_dram_V_BREADY,
        m_axi_dram_V_BRESP => dram_BRESP,
        m_axi_dram_V_BID => dram_BID,
        m_axi_dram_V_BUSER => dram_BUSER,
        dram_V_offset => dram_V1_reg_519,
        valid_V => validArray_V_load_reg_525,
        tag_0_V_read => tag_0_V_reg_533,
        tag_1_V_read => tag_1_V_reg_541,
        tag_2_V_read => tag_2_V_reg_549,
        tag_3_V_read => tag_3_V_reg_557,
        validArray_V_2_address0 => grp_WriteMiss_fu_235_validArray_V_2_address0,
        validArray_V_2_ce0 => grp_WriteMiss_fu_235_validArray_V_2_ce0,
        validArray_V_2_we0 => grp_WriteMiss_fu_235_validArray_V_2_we0,
        validArray_V_2_d0 => grp_WriteMiss_fu_235_validArray_V_2_d0,
        tagArray_0_V_address0 => grp_WriteMiss_fu_235_tagArray_0_V_address0,
        tagArray_0_V_ce0 => grp_WriteMiss_fu_235_tagArray_0_V_ce0,
        tagArray_0_V_we0 => grp_WriteMiss_fu_235_tagArray_0_V_we0,
        tagArray_0_V_d0 => grp_WriteMiss_fu_235_tagArray_0_V_d0,
        tagArray_1_V_address0 => grp_WriteMiss_fu_235_tagArray_1_V_address0,
        tagArray_1_V_ce0 => grp_WriteMiss_fu_235_tagArray_1_V_ce0,
        tagArray_1_V_we0 => grp_WriteMiss_fu_235_tagArray_1_V_we0,
        tagArray_1_V_d0 => grp_WriteMiss_fu_235_tagArray_1_V_d0,
        tagArray_2_V_address0 => grp_WriteMiss_fu_235_tagArray_2_V_address0,
        tagArray_2_V_ce0 => grp_WriteMiss_fu_235_tagArray_2_V_ce0,
        tagArray_2_V_we0 => grp_WriteMiss_fu_235_tagArray_2_V_we0,
        tagArray_2_V_d0 => grp_WriteMiss_fu_235_tagArray_2_V_d0,
        tagArray_3_V_address0 => grp_WriteMiss_fu_235_tagArray_3_V_address0,
        tagArray_3_V_ce0 => grp_WriteMiss_fu_235_tagArray_3_V_ce0,
        tagArray_3_V_we0 => grp_WriteMiss_fu_235_tagArray_3_V_we0,
        tagArray_3_V_d0 => grp_WriteMiss_fu_235_tagArray_3_V_d0,
        mruArray_V_address0 => grp_WriteMiss_fu_235_mruArray_V_address0,
        mruArray_V_ce0 => grp_WriteMiss_fu_235_mruArray_V_ce0,
        mruArray_V_we0 => grp_WriteMiss_fu_235_mruArray_V_we0,
        mruArray_V_d0 => grp_WriteMiss_fu_235_mruArray_V_d0,
        mruArray_V_q0 => mruArray_V_q0,
        dataArray_V_0_address0 => grp_WriteMiss_fu_235_dataArray_V_0_address0,
        dataArray_V_0_ce0 => grp_WriteMiss_fu_235_dataArray_V_0_ce0,
        dataArray_V_0_we0 => grp_WriteMiss_fu_235_dataArray_V_0_we0,
        dataArray_V_0_d0 => grp_WriteMiss_fu_235_dataArray_V_0_d0,
        dataArray_V_0_q0 => dataArray_V_0_q0,
        dataArray_V_1_address0 => grp_WriteMiss_fu_235_dataArray_V_1_address0,
        dataArray_V_1_ce0 => grp_WriteMiss_fu_235_dataArray_V_1_ce0,
        dataArray_V_1_we0 => grp_WriteMiss_fu_235_dataArray_V_1_we0,
        dataArray_V_1_d0 => grp_WriteMiss_fu_235_dataArray_V_1_d0,
        dataArray_V_1_q0 => dataArray_V_1_q0,
        dataArray_V_2_address0 => grp_WriteMiss_fu_235_dataArray_V_2_address0,
        dataArray_V_2_ce0 => grp_WriteMiss_fu_235_dataArray_V_2_ce0,
        dataArray_V_2_we0 => grp_WriteMiss_fu_235_dataArray_V_2_we0,
        dataArray_V_2_d0 => grp_WriteMiss_fu_235_dataArray_V_2_d0,
        dataArray_V_2_q0 => dataArray_V_2_q0,
        dataArray_V_3_address0 => grp_WriteMiss_fu_235_dataArray_V_3_address0,
        dataArray_V_3_ce0 => grp_WriteMiss_fu_235_dataArray_V_3_ce0,
        dataArray_V_3_we0 => grp_WriteMiss_fu_235_dataArray_V_3_we0,
        dataArray_V_3_d0 => grp_WriteMiss_fu_235_dataArray_V_3_d0,
        dataArray_V_3_q0 => dataArray_V_3_q0);

    grp_ReadHit_fu_269 : component ReadHit
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_ReadHit_fu_269_ap_start,
        ap_done => grp_ReadHit_fu_269_ap_done,
        ap_idle => grp_ReadHit_fu_269_ap_idle,
        ap_ready => grp_ReadHit_fu_269_ap_ready,
        i_addr_V => i_addr_V,
        valid_V => validArray_V_load_reg_525,
        tag_0_V_read => tag_0_V_reg_533,
        tag_1_V_read => tag_1_V_reg_541,
        tag_2_V_read => tag_2_V_reg_549,
        tag_3_V_read => tag_3_V_reg_557,
        dataArray_0_V_address0 => grp_ReadHit_fu_269_dataArray_0_V_address0,
        dataArray_0_V_ce0 => grp_ReadHit_fu_269_dataArray_0_V_ce0,
        dataArray_0_V_q0 => dataArray_V_0_q0,
        dataArray_1_V_address0 => grp_ReadHit_fu_269_dataArray_1_V_address0,
        dataArray_1_V_ce0 => grp_ReadHit_fu_269_dataArray_1_V_ce0,
        dataArray_1_V_q0 => dataArray_V_1_q0,
        dataArray_2_V_address0 => grp_ReadHit_fu_269_dataArray_2_V_address0,
        dataArray_2_V_ce0 => grp_ReadHit_fu_269_dataArray_2_V_ce0,
        dataArray_2_V_q0 => dataArray_V_2_q0,
        dataArray_3_V_address0 => grp_ReadHit_fu_269_dataArray_3_V_address0,
        dataArray_3_V_ce0 => grp_ReadHit_fu_269_dataArray_3_V_ce0,
        dataArray_3_V_q0 => dataArray_V_3_q0,
        mruArray_V_6_address0 => grp_ReadHit_fu_269_mruArray_V_6_address0,
        mruArray_V_6_ce0 => grp_ReadHit_fu_269_mruArray_V_6_ce0,
        mruArray_V_6_we0 => grp_ReadHit_fu_269_mruArray_V_6_we0,
        mruArray_V_6_d0 => grp_ReadHit_fu_269_mruArray_V_6_d0,
        mruArray_V_6_q0 => mruArray_V_q0,
        ap_return => grp_ReadHit_fu_269_ap_return);

    grp_WriteHit_fu_294 : component WriteHit
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_WriteHit_fu_294_ap_start,
        ap_done => grp_WriteHit_fu_294_ap_done,
        ap_idle => grp_WriteHit_fu_294_ap_idle,
        ap_ready => grp_WriteHit_fu_294_ap_ready,
        i_addr_V => i_addr_V,
        i_wdata_V => i_wdata_V,
        valid_V => validArray_V_load_reg_525,
        tag_0_V_read => tag_0_V_reg_533,
        tag_1_V_read => tag_1_V_reg_541,
        tag_2_V_read => tag_2_V_reg_549,
        tag_3_V_read => tag_3_V_reg_557,
        dataArray_0_V_address0 => grp_WriteHit_fu_294_dataArray_0_V_address0,
        dataArray_0_V_ce0 => grp_WriteHit_fu_294_dataArray_0_V_ce0,
        dataArray_0_V_we0 => grp_WriteHit_fu_294_dataArray_0_V_we0,
        dataArray_0_V_d0 => grp_WriteHit_fu_294_dataArray_0_V_d0,
        dataArray_1_V_address0 => grp_WriteHit_fu_294_dataArray_1_V_address0,
        dataArray_1_V_ce0 => grp_WriteHit_fu_294_dataArray_1_V_ce0,
        dataArray_1_V_we0 => grp_WriteHit_fu_294_dataArray_1_V_we0,
        dataArray_1_V_d0 => grp_WriteHit_fu_294_dataArray_1_V_d0,
        dataArray_2_V_address0 => grp_WriteHit_fu_294_dataArray_2_V_address0,
        dataArray_2_V_ce0 => grp_WriteHit_fu_294_dataArray_2_V_ce0,
        dataArray_2_V_we0 => grp_WriteHit_fu_294_dataArray_2_V_we0,
        dataArray_2_V_d0 => grp_WriteHit_fu_294_dataArray_2_V_d0,
        dataArray_3_V_address0 => grp_WriteHit_fu_294_dataArray_3_V_address0,
        dataArray_3_V_ce0 => grp_WriteHit_fu_294_dataArray_3_V_ce0,
        dataArray_3_V_we0 => grp_WriteHit_fu_294_dataArray_3_V_we0,
        dataArray_3_V_d0 => grp_WriteHit_fu_294_dataArray_3_V_d0,
        mruArray_V_2_address0 => grp_WriteHit_fu_294_mruArray_V_2_address0,
        mruArray_V_2_ce0 => grp_WriteHit_fu_294_mruArray_V_2_ce0,
        mruArray_V_2_we0 => grp_WriteHit_fu_294_mruArray_V_2_we0,
        mruArray_V_2_d0 => grp_WriteHit_fu_294_mruArray_V_2_d0,
        mruArray_V_2_q0 => mruArray_V_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_ReadHit_fu_269_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_ReadHit_fu_269_ap_start_reg <= ap_const_logic_0;
            else
                if (((brmerge_fu_450_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_ReadHit_fu_269_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ReadHit_fu_269_ap_ready = ap_const_logic_1)) then 
                    grp_ReadHit_fu_269_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ReadMiss_fu_201_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_ReadMiss_fu_201_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_ReadMiss_fu_201_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ReadMiss_fu_201_ap_ready = ap_const_logic_1)) then 
                    grp_ReadMiss_fu_201_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_WriteHit_fu_294_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_WriteHit_fu_294_ap_start_reg <= ap_const_logic_0;
            else
                if (((brmerge1_fu_462_p2 = ap_const_lv1_0) and (brmerge_fu_450_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_WriteHit_fu_294_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_WriteHit_fu_294_ap_ready = ap_const_logic_1)) then 
                    grp_WriteHit_fu_294_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_WriteMiss_fu_235_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_WriteMiss_fu_235_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_WriteMiss_fu_235_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_WriteMiss_fu_235_ap_ready = ap_const_logic_1)) then 
                    grp_WriteMiss_fu_235_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    agg_result_V_2_reg_185_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state6_on_subcall_done) and (brmerge1_reg_569 = ap_const_lv1_1) and (brmerge_reg_565 = ap_const_lv1_1) and (i_op_read_read_fu_108_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                agg_result_V_2_reg_185 <= grp_ReadMiss_fu_201_ap_return;
            elsif ((((ap_const_boolean_0 = ap_block_state6_on_subcall_done) and (brmerge1_reg_569 = ap_const_lv1_1) and (brmerge_reg_565 = ap_const_lv1_1) and (i_op_read_read_fu_108_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((grp_WriteHit_fu_294_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
                agg_result_V_2_reg_185 <= ap_const_lv512_lc_1;
            elsif (((grp_ReadHit_fu_269_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                agg_result_V_2_reg_185 <= grp_ReadHit_fu_269_ap_return;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((brmerge_fu_450_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                brmerge1_reg_569 <= brmerge1_fu_462_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                brmerge_reg_565 <= brmerge_fu_450_p2;
                dram_V1_reg_519 <= dram_V(31 downto 6);
                tag_0_V_reg_533 <= tagArray_V_0_q0;
                tag_1_V_reg_541 <= tagArray_V_1_q0;
                tag_2_V_reg_549 <= tagArray_V_2_q0;
                tag_3_V_reg_557 <= tagArray_V_3_q0;
                validArray_V_load_reg_525 <= validArray_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                p_Result_2_reg_501 <= p_Result_2_fu_340_p4;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, i_op_read_read_fu_108_p2, ap_CS_fsm_state2, brmerge_fu_450_p2, brmerge1_fu_462_p2, ap_CS_fsm_state3, grp_ReadHit_fu_269_ap_done, grp_WriteHit_fu_294_ap_done, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_block_state6_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((brmerge1_fu_462_p2 = ap_const_lv1_1) and (brmerge_fu_450_p2 = ap_const_lv1_1) and (i_op_read_read_fu_108_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                elsif (((brmerge1_fu_462_p2 = ap_const_lv1_1) and (brmerge_fu_450_p2 = ap_const_lv1_1) and (i_op_read_read_fu_108_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif (((brmerge1_fu_462_p2 = ap_const_lv1_0) and (brmerge_fu_450_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((grp_ReadHit_fu_269_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((grp_WriteHit_fu_294_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_boolean_0 = ap_block_state6_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_block_state6_on_subcall_done_assign_proc : process(grp_ReadMiss_fu_201_ap_done, grp_WriteMiss_fu_235_ap_done, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
                ap_block_state6_on_subcall_done <= (((grp_WriteMiss_fu_235_ap_done = ap_const_logic_0) and (ap_predicate_op67_call_state6 = ap_const_boolean_1)) or ((grp_ReadMiss_fu_201_ap_done = ap_const_logic_0) and (ap_predicate_op65_call_state6 = ap_const_boolean_1)));
    end process;


    ap_condition_758_assign_proc : process(brmerge_reg_565, brmerge1_reg_569, ap_CS_fsm_state6)
    begin
                ap_condition_758 <= ((brmerge1_reg_569 = ap_const_lv1_1) and (brmerge_reg_565 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state6, ap_block_state6_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state6_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_agg_result_V_2_phi_fu_189_p8_assign_proc : process(i_op_read_read_fu_108_p2, grp_ReadMiss_fu_201_ap_return, agg_result_V_2_reg_185, ap_condition_758)
    begin
        if ((ap_const_boolean_1 = ap_condition_758)) then
            if ((i_op_read_read_fu_108_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_agg_result_V_2_phi_fu_189_p8 <= grp_ReadMiss_fu_201_ap_return;
            elsif ((i_op_read_read_fu_108_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_agg_result_V_2_phi_fu_189_p8 <= ap_const_lv512_lc_1;
            else 
                ap_phi_mux_agg_result_V_2_phi_fu_189_p8 <= agg_result_V_2_reg_185;
            end if;
        else 
            ap_phi_mux_agg_result_V_2_phi_fu_189_p8 <= agg_result_V_2_reg_185;
        end if; 
    end process;


    ap_predicate_op65_call_state6_assign_proc : process(i_op_read_read_fu_108_p2, brmerge_reg_565, brmerge1_reg_569)
    begin
                ap_predicate_op65_call_state6 <= ((brmerge1_reg_569 = ap_const_lv1_1) and (brmerge_reg_565 = ap_const_lv1_1) and (i_op_read_read_fu_108_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op67_call_state6_assign_proc : process(i_op_read_read_fu_108_p2, brmerge_reg_565, brmerge1_reg_569)
    begin
                ap_predicate_op67_call_state6 <= ((brmerge1_reg_569 = ap_const_lv1_1) and (brmerge_reg_565 = ap_const_lv1_1) and (i_op_read_read_fu_108_p2 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state6, ap_block_state6_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state6_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ap_phi_mux_agg_result_V_2_phi_fu_189_p8;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    brmerge1_fu_462_p2 <= (tmp_s_fu_444_p2 or i_op_not_fu_456_p2);
    brmerge_fu_450_p1 <= (0=>i_op, others=>'-');
    brmerge_fu_450_p2 <= (tmp_s_fu_444_p2 or brmerge_fu_450_p1);

    dataArray_V_0_address0_assign_proc : process(ap_CS_fsm_state3, grp_ReadMiss_fu_201_dataArray_0_V_address0, grp_WriteMiss_fu_235_dataArray_V_0_address0, grp_ReadHit_fu_269_dataArray_0_V_address0, grp_WriteHit_fu_294_dataArray_0_V_address0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dataArray_V_0_address0 <= grp_WriteHit_fu_294_dataArray_0_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            dataArray_V_0_address0 <= grp_ReadHit_fu_269_dataArray_0_V_address0;
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_0_address0 <= grp_WriteMiss_fu_235_dataArray_V_0_address0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_0_address0 <= grp_ReadMiss_fu_201_dataArray_0_V_address0;
        else 
            dataArray_V_0_address0 <= "XXXX";
        end if; 
    end process;


    dataArray_V_0_ce0_assign_proc : process(ap_CS_fsm_state3, grp_ReadMiss_fu_201_dataArray_0_V_ce0, grp_WriteMiss_fu_235_dataArray_V_0_ce0, grp_ReadHit_fu_269_dataArray_0_V_ce0, grp_WriteHit_fu_294_dataArray_0_V_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dataArray_V_0_ce0 <= grp_WriteHit_fu_294_dataArray_0_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            dataArray_V_0_ce0 <= grp_ReadHit_fu_269_dataArray_0_V_ce0;
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_0_ce0 <= grp_WriteMiss_fu_235_dataArray_V_0_ce0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_0_ce0 <= grp_ReadMiss_fu_201_dataArray_0_V_ce0;
        else 
            dataArray_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dataArray_V_0_d0_assign_proc : process(grp_ReadMiss_fu_201_dataArray_0_V_d0, grp_WriteMiss_fu_235_dataArray_V_0_d0, grp_WriteHit_fu_294_dataArray_0_V_d0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dataArray_V_0_d0 <= grp_WriteHit_fu_294_dataArray_0_V_d0;
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_0_d0 <= grp_WriteMiss_fu_235_dataArray_V_0_d0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_0_d0 <= grp_ReadMiss_fu_201_dataArray_0_V_d0;
        else 
            dataArray_V_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dataArray_V_0_we0_assign_proc : process(grp_ReadMiss_fu_201_dataArray_0_V_we0, grp_WriteMiss_fu_235_dataArray_V_0_we0, grp_WriteHit_fu_294_dataArray_0_V_we0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dataArray_V_0_we0 <= grp_WriteHit_fu_294_dataArray_0_V_we0;
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_0_we0 <= grp_WriteMiss_fu_235_dataArray_V_0_we0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_0_we0 <= grp_ReadMiss_fu_201_dataArray_0_V_we0;
        else 
            dataArray_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dataArray_V_1_address0_assign_proc : process(ap_CS_fsm_state3, grp_ReadMiss_fu_201_dataArray_1_V_address0, grp_WriteMiss_fu_235_dataArray_V_1_address0, grp_ReadHit_fu_269_dataArray_1_V_address0, grp_WriteHit_fu_294_dataArray_1_V_address0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dataArray_V_1_address0 <= grp_WriteHit_fu_294_dataArray_1_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            dataArray_V_1_address0 <= grp_ReadHit_fu_269_dataArray_1_V_address0;
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_1_address0 <= grp_WriteMiss_fu_235_dataArray_V_1_address0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_1_address0 <= grp_ReadMiss_fu_201_dataArray_1_V_address0;
        else 
            dataArray_V_1_address0 <= "XXXX";
        end if; 
    end process;


    dataArray_V_1_ce0_assign_proc : process(ap_CS_fsm_state3, grp_ReadMiss_fu_201_dataArray_1_V_ce0, grp_WriteMiss_fu_235_dataArray_V_1_ce0, grp_ReadHit_fu_269_dataArray_1_V_ce0, grp_WriteHit_fu_294_dataArray_1_V_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dataArray_V_1_ce0 <= grp_WriteHit_fu_294_dataArray_1_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            dataArray_V_1_ce0 <= grp_ReadHit_fu_269_dataArray_1_V_ce0;
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_1_ce0 <= grp_WriteMiss_fu_235_dataArray_V_1_ce0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_1_ce0 <= grp_ReadMiss_fu_201_dataArray_1_V_ce0;
        else 
            dataArray_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dataArray_V_1_d0_assign_proc : process(grp_ReadMiss_fu_201_dataArray_1_V_d0, grp_WriteMiss_fu_235_dataArray_V_1_d0, grp_WriteHit_fu_294_dataArray_1_V_d0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dataArray_V_1_d0 <= grp_WriteHit_fu_294_dataArray_1_V_d0;
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_1_d0 <= grp_WriteMiss_fu_235_dataArray_V_1_d0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_1_d0 <= grp_ReadMiss_fu_201_dataArray_1_V_d0;
        else 
            dataArray_V_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dataArray_V_1_we0_assign_proc : process(grp_ReadMiss_fu_201_dataArray_1_V_we0, grp_WriteMiss_fu_235_dataArray_V_1_we0, grp_WriteHit_fu_294_dataArray_1_V_we0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dataArray_V_1_we0 <= grp_WriteHit_fu_294_dataArray_1_V_we0;
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_1_we0 <= grp_WriteMiss_fu_235_dataArray_V_1_we0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_1_we0 <= grp_ReadMiss_fu_201_dataArray_1_V_we0;
        else 
            dataArray_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dataArray_V_2_address0_assign_proc : process(ap_CS_fsm_state3, grp_ReadMiss_fu_201_dataArray_2_V_address0, grp_WriteMiss_fu_235_dataArray_V_2_address0, grp_ReadHit_fu_269_dataArray_2_V_address0, grp_WriteHit_fu_294_dataArray_2_V_address0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dataArray_V_2_address0 <= grp_WriteHit_fu_294_dataArray_2_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            dataArray_V_2_address0 <= grp_ReadHit_fu_269_dataArray_2_V_address0;
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_2_address0 <= grp_WriteMiss_fu_235_dataArray_V_2_address0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_2_address0 <= grp_ReadMiss_fu_201_dataArray_2_V_address0;
        else 
            dataArray_V_2_address0 <= "XXXX";
        end if; 
    end process;


    dataArray_V_2_ce0_assign_proc : process(ap_CS_fsm_state3, grp_ReadMiss_fu_201_dataArray_2_V_ce0, grp_WriteMiss_fu_235_dataArray_V_2_ce0, grp_ReadHit_fu_269_dataArray_2_V_ce0, grp_WriteHit_fu_294_dataArray_2_V_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dataArray_V_2_ce0 <= grp_WriteHit_fu_294_dataArray_2_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            dataArray_V_2_ce0 <= grp_ReadHit_fu_269_dataArray_2_V_ce0;
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_2_ce0 <= grp_WriteMiss_fu_235_dataArray_V_2_ce0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_2_ce0 <= grp_ReadMiss_fu_201_dataArray_2_V_ce0;
        else 
            dataArray_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dataArray_V_2_d0_assign_proc : process(grp_ReadMiss_fu_201_dataArray_2_V_d0, grp_WriteMiss_fu_235_dataArray_V_2_d0, grp_WriteHit_fu_294_dataArray_2_V_d0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dataArray_V_2_d0 <= grp_WriteHit_fu_294_dataArray_2_V_d0;
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_2_d0 <= grp_WriteMiss_fu_235_dataArray_V_2_d0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_2_d0 <= grp_ReadMiss_fu_201_dataArray_2_V_d0;
        else 
            dataArray_V_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dataArray_V_2_we0_assign_proc : process(grp_ReadMiss_fu_201_dataArray_2_V_we0, grp_WriteMiss_fu_235_dataArray_V_2_we0, grp_WriteHit_fu_294_dataArray_2_V_we0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dataArray_V_2_we0 <= grp_WriteHit_fu_294_dataArray_2_V_we0;
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_2_we0 <= grp_WriteMiss_fu_235_dataArray_V_2_we0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_2_we0 <= grp_ReadMiss_fu_201_dataArray_2_V_we0;
        else 
            dataArray_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dataArray_V_3_address0_assign_proc : process(ap_CS_fsm_state3, grp_ReadMiss_fu_201_dataArray_3_V_address0, grp_WriteMiss_fu_235_dataArray_V_3_address0, grp_ReadHit_fu_269_dataArray_3_V_address0, grp_WriteHit_fu_294_dataArray_3_V_address0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dataArray_V_3_address0 <= grp_WriteHit_fu_294_dataArray_3_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            dataArray_V_3_address0 <= grp_ReadHit_fu_269_dataArray_3_V_address0;
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_3_address0 <= grp_WriteMiss_fu_235_dataArray_V_3_address0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_3_address0 <= grp_ReadMiss_fu_201_dataArray_3_V_address0;
        else 
            dataArray_V_3_address0 <= "XXXX";
        end if; 
    end process;


    dataArray_V_3_ce0_assign_proc : process(ap_CS_fsm_state3, grp_ReadMiss_fu_201_dataArray_3_V_ce0, grp_WriteMiss_fu_235_dataArray_V_3_ce0, grp_ReadHit_fu_269_dataArray_3_V_ce0, grp_WriteHit_fu_294_dataArray_3_V_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dataArray_V_3_ce0 <= grp_WriteHit_fu_294_dataArray_3_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            dataArray_V_3_ce0 <= grp_ReadHit_fu_269_dataArray_3_V_ce0;
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_3_ce0 <= grp_WriteMiss_fu_235_dataArray_V_3_ce0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_3_ce0 <= grp_ReadMiss_fu_201_dataArray_3_V_ce0;
        else 
            dataArray_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dataArray_V_3_d0_assign_proc : process(grp_ReadMiss_fu_201_dataArray_3_V_d0, grp_WriteMiss_fu_235_dataArray_V_3_d0, grp_WriteHit_fu_294_dataArray_3_V_d0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dataArray_V_3_d0 <= grp_WriteHit_fu_294_dataArray_3_V_d0;
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_3_d0 <= grp_WriteMiss_fu_235_dataArray_V_3_d0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_3_d0 <= grp_ReadMiss_fu_201_dataArray_3_V_d0;
        else 
            dataArray_V_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dataArray_V_3_we0_assign_proc : process(grp_ReadMiss_fu_201_dataArray_3_V_we0, grp_WriteMiss_fu_235_dataArray_V_3_we0, grp_WriteHit_fu_294_dataArray_3_V_we0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dataArray_V_3_we0 <= grp_WriteHit_fu_294_dataArray_3_V_we0;
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_3_we0 <= grp_WriteMiss_fu_235_dataArray_V_3_we0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dataArray_V_3_we0 <= grp_ReadMiss_fu_201_dataArray_3_V_we0;
        else 
            dataArray_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dram_ARVALID_assign_proc : process(grp_ReadMiss_fu_201_m_axi_dram_V_ARVALID, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_ARVALID <= grp_ReadMiss_fu_201_m_axi_dram_V_ARVALID;
        else 
            dram_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    dram_AWADDR_assign_proc : process(grp_ReadMiss_fu_201_m_axi_dram_V_AWADDR, grp_WriteMiss_fu_235_m_axi_dram_V_AWADDR, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_AWADDR <= grp_WriteMiss_fu_235_m_axi_dram_V_AWADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_AWADDR <= grp_ReadMiss_fu_201_m_axi_dram_V_AWADDR;
        else 
            dram_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dram_AWBURST_assign_proc : process(grp_ReadMiss_fu_201_m_axi_dram_V_AWBURST, grp_WriteMiss_fu_235_m_axi_dram_V_AWBURST, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_AWBURST <= grp_WriteMiss_fu_235_m_axi_dram_V_AWBURST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_AWBURST <= grp_ReadMiss_fu_201_m_axi_dram_V_AWBURST;
        else 
            dram_AWBURST <= "XX";
        end if; 
    end process;


    dram_AWCACHE_assign_proc : process(grp_ReadMiss_fu_201_m_axi_dram_V_AWCACHE, grp_WriteMiss_fu_235_m_axi_dram_V_AWCACHE, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_AWCACHE <= grp_WriteMiss_fu_235_m_axi_dram_V_AWCACHE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_AWCACHE <= grp_ReadMiss_fu_201_m_axi_dram_V_AWCACHE;
        else 
            dram_AWCACHE <= "XXXX";
        end if; 
    end process;


    dram_AWID_assign_proc : process(grp_ReadMiss_fu_201_m_axi_dram_V_AWID, grp_WriteMiss_fu_235_m_axi_dram_V_AWID, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_AWID <= grp_WriteMiss_fu_235_m_axi_dram_V_AWID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_AWID <= grp_ReadMiss_fu_201_m_axi_dram_V_AWID;
        else 
            dram_AWID <= "X";
        end if; 
    end process;


    dram_AWLEN_assign_proc : process(grp_ReadMiss_fu_201_m_axi_dram_V_AWLEN, grp_WriteMiss_fu_235_m_axi_dram_V_AWLEN, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_AWLEN <= grp_WriteMiss_fu_235_m_axi_dram_V_AWLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_AWLEN <= grp_ReadMiss_fu_201_m_axi_dram_V_AWLEN;
        else 
            dram_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dram_AWLOCK_assign_proc : process(grp_ReadMiss_fu_201_m_axi_dram_V_AWLOCK, grp_WriteMiss_fu_235_m_axi_dram_V_AWLOCK, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_AWLOCK <= grp_WriteMiss_fu_235_m_axi_dram_V_AWLOCK;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_AWLOCK <= grp_ReadMiss_fu_201_m_axi_dram_V_AWLOCK;
        else 
            dram_AWLOCK <= "XX";
        end if; 
    end process;


    dram_AWPROT_assign_proc : process(grp_ReadMiss_fu_201_m_axi_dram_V_AWPROT, grp_WriteMiss_fu_235_m_axi_dram_V_AWPROT, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_AWPROT <= grp_WriteMiss_fu_235_m_axi_dram_V_AWPROT;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_AWPROT <= grp_ReadMiss_fu_201_m_axi_dram_V_AWPROT;
        else 
            dram_AWPROT <= "XXX";
        end if; 
    end process;


    dram_AWQOS_assign_proc : process(grp_ReadMiss_fu_201_m_axi_dram_V_AWQOS, grp_WriteMiss_fu_235_m_axi_dram_V_AWQOS, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_AWQOS <= grp_WriteMiss_fu_235_m_axi_dram_V_AWQOS;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_AWQOS <= grp_ReadMiss_fu_201_m_axi_dram_V_AWQOS;
        else 
            dram_AWQOS <= "XXXX";
        end if; 
    end process;


    dram_AWREGION_assign_proc : process(grp_ReadMiss_fu_201_m_axi_dram_V_AWREGION, grp_WriteMiss_fu_235_m_axi_dram_V_AWREGION, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_AWREGION <= grp_WriteMiss_fu_235_m_axi_dram_V_AWREGION;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_AWREGION <= grp_ReadMiss_fu_201_m_axi_dram_V_AWREGION;
        else 
            dram_AWREGION <= "XXXX";
        end if; 
    end process;


    dram_AWSIZE_assign_proc : process(grp_ReadMiss_fu_201_m_axi_dram_V_AWSIZE, grp_WriteMiss_fu_235_m_axi_dram_V_AWSIZE, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_AWSIZE <= grp_WriteMiss_fu_235_m_axi_dram_V_AWSIZE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_AWSIZE <= grp_ReadMiss_fu_201_m_axi_dram_V_AWSIZE;
        else 
            dram_AWSIZE <= "XXX";
        end if; 
    end process;


    dram_AWUSER_assign_proc : process(grp_ReadMiss_fu_201_m_axi_dram_V_AWUSER, grp_WriteMiss_fu_235_m_axi_dram_V_AWUSER, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_AWUSER <= grp_WriteMiss_fu_235_m_axi_dram_V_AWUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_AWUSER <= grp_ReadMiss_fu_201_m_axi_dram_V_AWUSER;
        else 
            dram_AWUSER <= "X";
        end if; 
    end process;


    dram_AWVALID_assign_proc : process(grp_ReadMiss_fu_201_m_axi_dram_V_AWVALID, grp_WriteMiss_fu_235_m_axi_dram_V_AWVALID, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_AWVALID <= grp_WriteMiss_fu_235_m_axi_dram_V_AWVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_AWVALID <= grp_ReadMiss_fu_201_m_axi_dram_V_AWVALID;
        else 
            dram_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    dram_BREADY_assign_proc : process(grp_ReadMiss_fu_201_m_axi_dram_V_BREADY, grp_WriteMiss_fu_235_m_axi_dram_V_BREADY, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_BREADY <= grp_WriteMiss_fu_235_m_axi_dram_V_BREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_BREADY <= grp_ReadMiss_fu_201_m_axi_dram_V_BREADY;
        else 
            dram_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    dram_RREADY_assign_proc : process(grp_ReadMiss_fu_201_m_axi_dram_V_RREADY, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_RREADY <= grp_ReadMiss_fu_201_m_axi_dram_V_RREADY;
        else 
            dram_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    dram_WDATA_assign_proc : process(grp_ReadMiss_fu_201_m_axi_dram_V_WDATA, grp_WriteMiss_fu_235_m_axi_dram_V_WDATA, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_WDATA <= grp_WriteMiss_fu_235_m_axi_dram_V_WDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_WDATA <= grp_ReadMiss_fu_201_m_axi_dram_V_WDATA;
        else 
            dram
        end if; 
    end process;


    dram_WID_assign_proc : process(grp_ReadMiss_fu_201_m_axi_dram_V_WID, grp_WriteMiss_fu_235_m_axi_dram_V_WID, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_WID <= grp_WriteMiss_fu_235_m_axi_dram_V_WID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_WID <= grp_ReadMiss_fu_201_m_axi_dram_V_WID;
        else 
            dram_WID <= "X";
        end if; 
    end process;


    dram_WLAST_assign_proc : process(grp_ReadMiss_fu_201_m_axi_dram_V_WLAST, grp_WriteMiss_fu_235_m_axi_dram_V_WLAST, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_WLAST <= grp_WriteMiss_fu_235_m_axi_dram_V_WLAST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_WLAST <= grp_ReadMiss_fu_201_m_axi_dram_V_WLAST;
        else 
            dram_WLAST <= 'X';
        end if; 
    end process;


    dram_WSTRB_assign_proc : process(grp_ReadMiss_fu_201_m_axi_dram_V_WSTRB, grp_WriteMiss_fu_235_m_axi_dram_V_WSTRB, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_WSTRB <= grp_WriteMiss_fu_235_m_axi_dram_V_WSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_WSTRB <= grp_ReadMiss_fu_201_m_axi_dram_V_WSTRB;
        else 
            dram_WSTRB <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dram_WUSER_assign_proc : process(grp_ReadMiss_fu_201_m_axi_dram_V_WUSER, grp_WriteMiss_fu_235_m_axi_dram_V_WUSER, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_WUSER <= grp_WriteMiss_fu_235_m_axi_dram_V_WUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_WUSER <= grp_ReadMiss_fu_201_m_axi_dram_V_WUSER;
        else 
            dram_WUSER <= "X";
        end if; 
    end process;


    dram_WVALID_assign_proc : process(grp_ReadMiss_fu_201_m_axi_dram_V_WVALID, grp_WriteMiss_fu_235_m_axi_dram_V_WVALID, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_WVALID <= grp_WriteMiss_fu_235_m_axi_dram_V_WVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dram_WVALID <= grp_ReadMiss_fu_201_m_axi_dram_V_WVALID;
        else 
            dram_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    grp_ReadHit_fu_269_ap_start <= grp_ReadHit_fu_269_ap_start_reg;
    grp_ReadMiss_fu_201_ap_start <= grp_ReadMiss_fu_201_ap_start_reg;
    grp_WriteHit_fu_294_ap_start <= grp_WriteHit_fu_294_ap_start_reg;
    grp_WriteMiss_fu_235_ap_start <= grp_WriteMiss_fu_235_ap_start_reg;
    i_op_not_fu_456_p0 <= (0=>i_op, others=>'-');
    i_op_not_fu_456_p2 <= (i_op_not_fu_456_p0 xor ap_const_lv1_1);
    i_op_read_read_fu_108_p2 <= (0=>i_op, others=>'-');

    mruArray_V_address0_assign_proc : process(ap_CS_fsm_state3, grp_ReadMiss_fu_201_mruArray_V_4_address0, grp_WriteMiss_fu_235_mruArray_V_address0, grp_ReadHit_fu_269_mruArray_V_6_address0, grp_WriteHit_fu_294_mruArray_V_2_address0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            mruArray_V_address0 <= grp_WriteHit_fu_294_mruArray_V_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            mruArray_V_address0 <= grp_ReadHit_fu_269_mruArray_V_6_address0;
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            mruArray_V_address0 <= grp_WriteMiss_fu_235_mruArray_V_address0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            mruArray_V_address0 <= grp_ReadMiss_fu_201_mruArray_V_4_address0;
        else 
            mruArray_V_address0 <= "XXXX";
        end if; 
    end process;


    mruArray_V_ce0_assign_proc : process(ap_CS_fsm_state3, grp_ReadMiss_fu_201_mruArray_V_4_ce0, grp_WriteMiss_fu_235_mruArray_V_ce0, grp_ReadHit_fu_269_mruArray_V_6_ce0, grp_WriteHit_fu_294_mruArray_V_2_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            mruArray_V_ce0 <= grp_WriteHit_fu_294_mruArray_V_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            mruArray_V_ce0 <= grp_ReadHit_fu_269_mruArray_V_6_ce0;
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            mruArray_V_ce0 <= grp_WriteMiss_fu_235_mruArray_V_ce0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            mruArray_V_ce0 <= grp_ReadMiss_fu_201_mruArray_V_4_ce0;
        else 
            mruArray_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mruArray_V_d0_assign_proc : process(ap_CS_fsm_state3, grp_ReadMiss_fu_201_mruArray_V_4_d0, grp_WriteMiss_fu_235_mruArray_V_d0, grp_ReadHit_fu_269_mruArray_V_6_d0, grp_WriteHit_fu_294_mruArray_V_2_d0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            mruArray_V_d0 <= grp_WriteHit_fu_294_mruArray_V_2_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            mruArray_V_d0 <= grp_ReadHit_fu_269_mruArray_V_6_d0;
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            mruArray_V_d0 <= grp_WriteMiss_fu_235_mruArray_V_d0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            mruArray_V_d0 <= grp_ReadMiss_fu_201_mruArray_V_4_d0;
        else 
            mruArray_V_d0 <= "XXXX";
        end if; 
    end process;


    mruArray_V_we0_assign_proc : process(ap_CS_fsm_state3, grp_ReadMiss_fu_201_mruArray_V_4_we0, grp_WriteMiss_fu_235_mruArray_V_we0, grp_ReadHit_fu_269_mruArray_V_6_we0, grp_WriteHit_fu_294_mruArray_V_2_we0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            mruArray_V_we0 <= grp_WriteHit_fu_294_mruArray_V_2_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            mruArray_V_we0 <= grp_ReadHit_fu_269_mruArray_V_6_we0;
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            mruArray_V_we0 <= grp_WriteMiss_fu_235_mruArray_V_we0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            mruArray_V_we0 <= grp_ReadMiss_fu_201_mruArray_V_4_we0;
        else 
            mruArray_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    
    p_Result_2_fu_340_p4_proc : process(i_addr_V)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_2_fu_340_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_4(5 - 1 downto 0);
        v0_cpy := i_addr_V;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_4(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_2_fu_340_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_2_fu_340_p4_i) := i_addr_V(32-1-p_Result_2_fu_340_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_2_fu_340_p4 <= resvalue(28-1 downto 0);
    end process;

    p_Result_32_3_fu_432_p5 <= (((tmp_45_3_fu_426_p2 & tmp_45_2_fu_407_p2) & tmp_45_1_fu_388_p2) & tmp_2_fu_369_p2);
    
    p_Result_s_fu_321_p4_proc : process(i_addr_V)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_s_fu_321_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_3(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := i_addr_V;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_3(5-1 downto 0)));
            for p_Result_s_fu_321_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_s_fu_321_p4_i) := i_addr_V(32-1-p_Result_s_fu_321_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_s_fu_321_p4 <= resvalue(4-1 downto 0);
    end process;


    tagArray_V_0_address0_assign_proc : process(ap_CS_fsm_state1, grp_ReadMiss_fu_201_tagArray_0_V_address0, grp_WriteMiss_fu_235_tagArray_0_V_address0, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6, tmp_9_fu_331_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            tagArray_V_0_address0 <= tmp_9_fu_331_p1(4 - 1 downto 0);
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            tagArray_V_0_address0 <= grp_WriteMiss_fu_235_tagArray_0_V_address0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            tagArray_V_0_address0 <= grp_ReadMiss_fu_201_tagArray_0_V_address0;
        else 
            tagArray_V_0_address0 <= "XXXX";
        end if; 
    end process;


    tagArray_V_0_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_ReadMiss_fu_201_tagArray_0_V_ce0, grp_WriteMiss_fu_235_tagArray_0_V_ce0, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            tagArray_V_0_ce0 <= ap_const_logic_1;
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            tagArray_V_0_ce0 <= grp_WriteMiss_fu_235_tagArray_0_V_ce0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            tagArray_V_0_ce0 <= grp_ReadMiss_fu_201_tagArray_0_V_ce0;
        else 
            tagArray_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tagArray_V_0_d0_assign_proc : process(grp_ReadMiss_fu_201_tagArray_0_V_d0, grp_WriteMiss_fu_235_tagArray_0_V_d0, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((ap_predicate_op67_call_state6 = ap_const_boolean_1)) then 
                tagArray_V_0_d0 <= grp_WriteMiss_fu_235_tagArray_0_V_d0;
            elsif ((ap_predicate_op65_call_state6 = ap_const_boolean_1)) then 
                tagArray_V_0_d0 <= grp_ReadMiss_fu_201_tagArray_0_V_d0;
            else 
                tagArray_V_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            tagArray_V_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tagArray_V_0_we0_assign_proc : process(grp_ReadMiss_fu_201_tagArray_0_V_we0, grp_WriteMiss_fu_235_tagArray_0_V_we0, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((ap_predicate_op67_call_state6 = ap_const_boolean_1)) then 
                tagArray_V_0_we0 <= grp_WriteMiss_fu_235_tagArray_0_V_we0;
            elsif ((ap_predicate_op65_call_state6 = ap_const_boolean_1)) then 
                tagArray_V_0_we0 <= grp_ReadMiss_fu_201_tagArray_0_V_we0;
            else 
                tagArray_V_0_we0 <= ap_const_logic_0;
            end if;
        else 
            tagArray_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tagArray_V_1_address0_assign_proc : process(ap_CS_fsm_state1, grp_ReadMiss_fu_201_tagArray_1_V_address0, grp_WriteMiss_fu_235_tagArray_1_V_address0, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6, tmp_9_fu_331_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            tagArray_V_1_address0 <= tmp_9_fu_331_p1(4 - 1 downto 0);
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            tagArray_V_1_address0 <= grp_WriteMiss_fu_235_tagArray_1_V_address0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            tagArray_V_1_address0 <= grp_ReadMiss_fu_201_tagArray_1_V_address0;
        else 
            tagArray_V_1_address0 <= "XXXX";
        end if; 
    end process;


    tagArray_V_1_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_ReadMiss_fu_201_tagArray_1_V_ce0, grp_WriteMiss_fu_235_tagArray_1_V_ce0, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            tagArray_V_1_ce0 <= ap_const_logic_1;
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            tagArray_V_1_ce0 <= grp_WriteMiss_fu_235_tagArray_1_V_ce0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            tagArray_V_1_ce0 <= grp_ReadMiss_fu_201_tagArray_1_V_ce0;
        else 
            tagArray_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tagArray_V_1_d0_assign_proc : process(grp_ReadMiss_fu_201_tagArray_1_V_d0, grp_WriteMiss_fu_235_tagArray_1_V_d0, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((ap_predicate_op67_call_state6 = ap_const_boolean_1)) then 
                tagArray_V_1_d0 <= grp_WriteMiss_fu_235_tagArray_1_V_d0;
            elsif ((ap_predicate_op65_call_state6 = ap_const_boolean_1)) then 
                tagArray_V_1_d0 <= grp_ReadMiss_fu_201_tagArray_1_V_d0;
            else 
                tagArray_V_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            tagArray_V_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tagArray_V_1_we0_assign_proc : process(grp_ReadMiss_fu_201_tagArray_1_V_we0, grp_WriteMiss_fu_235_tagArray_1_V_we0, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((ap_predicate_op67_call_state6 = ap_const_boolean_1)) then 
                tagArray_V_1_we0 <= grp_WriteMiss_fu_235_tagArray_1_V_we0;
            elsif ((ap_predicate_op65_call_state6 = ap_const_boolean_1)) then 
                tagArray_V_1_we0 <= grp_ReadMiss_fu_201_tagArray_1_V_we0;
            else 
                tagArray_V_1_we0 <= ap_const_logic_0;
            end if;
        else 
            tagArray_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tagArray_V_2_address0_assign_proc : process(ap_CS_fsm_state1, grp_ReadMiss_fu_201_tagArray_2_V_address0, grp_WriteMiss_fu_235_tagArray_2_V_address0, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6, tmp_9_fu_331_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            tagArray_V_2_address0 <= tmp_9_fu_331_p1(4 - 1 downto 0);
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            tagArray_V_2_address0 <= grp_WriteMiss_fu_235_tagArray_2_V_address0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            tagArray_V_2_address0 <= grp_ReadMiss_fu_201_tagArray_2_V_address0;
        else 
            tagArray_V_2_address0 <= "XXXX";
        end if; 
    end process;


    tagArray_V_2_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_ReadMiss_fu_201_tagArray_2_V_ce0, grp_WriteMiss_fu_235_tagArray_2_V_ce0, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            tagArray_V_2_ce0 <= ap_const_logic_1;
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            tagArray_V_2_ce0 <= grp_WriteMiss_fu_235_tagArray_2_V_ce0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            tagArray_V_2_ce0 <= grp_ReadMiss_fu_201_tagArray_2_V_ce0;
        else 
            tagArray_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tagArray_V_2_d0_assign_proc : process(grp_ReadMiss_fu_201_tagArray_2_V_d0, grp_WriteMiss_fu_235_tagArray_2_V_d0, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((ap_predicate_op67_call_state6 = ap_const_boolean_1)) then 
                tagArray_V_2_d0 <= grp_WriteMiss_fu_235_tagArray_2_V_d0;
            elsif ((ap_predicate_op65_call_state6 = ap_const_boolean_1)) then 
                tagArray_V_2_d0 <= grp_ReadMiss_fu_201_tagArray_2_V_d0;
            else 
                tagArray_V_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            tagArray_V_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tagArray_V_2_we0_assign_proc : process(grp_ReadMiss_fu_201_tagArray_2_V_we0, grp_WriteMiss_fu_235_tagArray_2_V_we0, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((ap_predicate_op67_call_state6 = ap_const_boolean_1)) then 
                tagArray_V_2_we0 <= grp_WriteMiss_fu_235_tagArray_2_V_we0;
            elsif ((ap_predicate_op65_call_state6 = ap_const_boolean_1)) then 
                tagArray_V_2_we0 <= grp_ReadMiss_fu_201_tagArray_2_V_we0;
            else 
                tagArray_V_2_we0 <= ap_const_logic_0;
            end if;
        else 
            tagArray_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tagArray_V_3_address0_assign_proc : process(ap_CS_fsm_state1, grp_ReadMiss_fu_201_tagArray_3_V_address0, grp_WriteMiss_fu_235_tagArray_3_V_address0, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6, tmp_9_fu_331_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            tagArray_V_3_address0 <= tmp_9_fu_331_p1(4 - 1 downto 0);
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            tagArray_V_3_address0 <= grp_WriteMiss_fu_235_tagArray_3_V_address0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            tagArray_V_3_address0 <= grp_ReadMiss_fu_201_tagArray_3_V_address0;
        else 
            tagArray_V_3_address0 <= "XXXX";
        end if; 
    end process;


    tagArray_V_3_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_ReadMiss_fu_201_tagArray_3_V_ce0, grp_WriteMiss_fu_235_tagArray_3_V_ce0, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            tagArray_V_3_ce0 <= ap_const_logic_1;
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            tagArray_V_3_ce0 <= grp_WriteMiss_fu_235_tagArray_3_V_ce0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            tagArray_V_3_ce0 <= grp_ReadMiss_fu_201_tagArray_3_V_ce0;
        else 
            tagArray_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tagArray_V_3_d0_assign_proc : process(grp_ReadMiss_fu_201_tagArray_3_V_d0, grp_WriteMiss_fu_235_tagArray_3_V_d0, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((ap_predicate_op67_call_state6 = ap_const_boolean_1)) then 
                tagArray_V_3_d0 <= grp_WriteMiss_fu_235_tagArray_3_V_d0;
            elsif ((ap_predicate_op65_call_state6 = ap_const_boolean_1)) then 
                tagArray_V_3_d0 <= grp_ReadMiss_fu_201_tagArray_3_V_d0;
            else 
                tagArray_V_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            tagArray_V_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tagArray_V_3_we0_assign_proc : process(grp_ReadMiss_fu_201_tagArray_3_V_we0, grp_WriteMiss_fu_235_tagArray_3_V_we0, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((ap_predicate_op67_call_state6 = ap_const_boolean_1)) then 
                tagArray_V_3_we0 <= grp_WriteMiss_fu_235_tagArray_3_V_we0;
            elsif ((ap_predicate_op65_call_state6 = ap_const_boolean_1)) then 
                tagArray_V_3_we0 <= grp_ReadMiss_fu_201_tagArray_3_V_we0;
            else 
                tagArray_V_3_we0 <= ap_const_logic_0;
            end if;
        else 
            tagArray_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_fu_364_p2 <= "1" when (tagArray_V_0_q0 = p_Result_2_reg_501) else "0";
    tmp_2_fu_369_p2 <= (tmp_fu_360_p1 and tmp_1_fu_364_p2);
    tmp_42_fu_375_p3 <= validArray_V_q0(1 downto 1);
    tmp_43_fu_394_p3 <= validArray_V_q0(2 downto 2);
    tmp_44_1_fu_383_p2 <= "1" when (tagArray_V_1_q0 = p_Result_2_reg_501) else "0";
    tmp_44_2_fu_402_p2 <= "1" when (tagArray_V_2_q0 = p_Result_2_reg_501) else "0";
    tmp_44_3_fu_421_p2 <= "1" when (tagArray_V_3_q0 = p_Result_2_reg_501) else "0";
    tmp_44_fu_413_p3 <= validArray_V_q0(3 downto 3);
    tmp_45_1_fu_388_p2 <= (tmp_44_1_fu_383_p2 and tmp_42_fu_375_p3);
    tmp_45_2_fu_407_p2 <= (tmp_44_2_fu_402_p2 and tmp_43_fu_394_p3);
    tmp_45_3_fu_426_p2 <= (tmp_44_fu_413_p3 and tmp_44_3_fu_421_p2);
    tmp_9_fu_331_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_s_fu_321_p4),64));
    tmp_fu_360_p1 <= validArray_V_q0(1 - 1 downto 0);
    tmp_s_fu_444_p2 <= "1" when (p_Result_32_3_fu_432_p5 = ap_const_lv4_0) else "0";

    validArray_V_address0_assign_proc : process(ap_CS_fsm_state1, grp_ReadMiss_fu_201_validArray_V_4_address0, grp_WriteMiss_fu_235_validArray_V_2_address0, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6, tmp_9_fu_331_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            validArray_V_address0 <= tmp_9_fu_331_p1(4 - 1 downto 0);
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            validArray_V_address0 <= grp_WriteMiss_fu_235_validArray_V_2_address0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            validArray_V_address0 <= grp_ReadMiss_fu_201_validArray_V_4_address0;
        else 
            validArray_V_address0 <= "XXXX";
        end if; 
    end process;


    validArray_V_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_ReadMiss_fu_201_validArray_V_4_ce0, grp_WriteMiss_fu_235_validArray_V_2_ce0, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            validArray_V_ce0 <= ap_const_logic_1;
        elsif (((ap_predicate_op67_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            validArray_V_ce0 <= grp_WriteMiss_fu_235_validArray_V_2_ce0;
        elsif (((ap_predicate_op65_call_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            validArray_V_ce0 <= grp_ReadMiss_fu_201_validArray_V_4_ce0;
        else 
            validArray_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    validArray_V_d0_assign_proc : process(grp_ReadMiss_fu_201_validArray_V_4_d0, grp_WriteMiss_fu_235_validArray_V_2_d0, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((ap_predicate_op67_call_state6 = ap_const_boolean_1)) then 
                validArray_V_d0 <= grp_WriteMiss_fu_235_validArray_V_2_d0;
            elsif ((ap_predicate_op65_call_state6 = ap_const_boolean_1)) then 
                validArray_V_d0 <= grp_ReadMiss_fu_201_validArray_V_4_d0;
            else 
                validArray_V_d0 <= "XXXX";
            end if;
        else 
            validArray_V_d0 <= "XXXX";
        end if; 
    end process;


    validArray_V_we0_assign_proc : process(grp_ReadMiss_fu_201_validArray_V_4_we0, grp_WriteMiss_fu_235_validArray_V_2_we0, ap_CS_fsm_state6, ap_predicate_op65_call_state6, ap_predicate_op67_call_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
            if ((ap_predicate_op67_call_state6 = ap_const_boolean_1)) then 
                validArray_V_we0 <= grp_WriteMiss_fu_235_validArray_V_2_we0;
            elsif ((ap_predicate_op65_call_state6 = ap_const_boolean_1)) then 
                validArray_V_we0 <= grp_ReadMiss_fu_201_validArray_V_4_we0;
            else 
                validArray_V_we0 <= ap_const_logic_0;
            end if;
        else 
            validArray_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
